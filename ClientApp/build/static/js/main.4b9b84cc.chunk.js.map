{"version":3,"sources":["assets/hero.svg","assets/basicCreditCard.svg","components/styles/MediaControls.styles.ts","components/MediaControls.tsx","components/styles/LocalSettings.styles.ts","components/LocalSettings.tsx","Utils/Utils.ts","core/actions/calls.ts","core/actions/controls.ts","core/actions/devices.ts","core/actions/sdk.ts","core/actions/streams.ts","core/RemoteStreamSelector.ts","core/constants.ts","core/sideEffects.ts","components/CommandPanel.tsx","components/styles/ParticipantStack.styles.ts","components/ParticipantStack.tsx","containers/ParticipantStack.ts","components/styles/CommandPanel.styles.ts","components/Footer.tsx","components/LocalPreview.tsx","components/styles/Header.styles.ts","components/styles/CallRecording.styles.ts","containers/CallRecording.ts","components/CallRecording.tsx","feedbacks/submitFeedback.ts","Utils/captureScreenshot.ts","core/reducers/devices.ts","core/reducers/streams.ts","core/reducers/controls.ts","core/reducers/sdk.ts","core/reducers/calls.ts","core/reducers/index.ts","core/store.ts","feedbacks/logger.ts","Utils/createFeedback.ts","components/FeedbackButton.tsx","containers/Header.ts","components/Header.tsx","components/styles/MediaGallery.styles.ts","components/styles/StreamMedia.styles.ts","components/LocalStreamMedia.tsx","components/RemoteStreamMedia.tsx","containers/MediaGallery.ts","components/MediaGallery.tsx","components/styles/MediaFullScreen.styles.ts","components/MediaFullScreen.tsx","components/styles/GroupCall.styles.ts","components/ComplianceBanner.tsx","components/DialogBox.tsx","containers/GroupCall.ts","components/GroupCall.tsx","components/styles/EndCall.styles.ts","components/EndCall.tsx","components/styles/HomeScreen.styles.ts","components/HomeScreen.tsx","components/styles/LocalPreview.styles.ts","components/styles/Configuration.styles.ts","components/DisplayNameField.tsx","containers/Configuration.ts","components/Configuration.tsx","App.tsx","index.tsx","assets/staticmedia.svg"],"names":["module","exports","palette","getTheme","mediaControlStyles","mergeStyles","height","padding","display","borderRadius","overflow","OkButtonStyles","position","right","controlButtonStyle","backgroundColor","white","width","border","marginRight","color","neutralSecondary","controlButtonDisabledStyle","neutralLight","endCallButtonStyle","marginLeft","selectors","endCallButtonTextStyle","fontSize","lineHeight","fullWidth","MediaControls","props","cameraActive","cameraPermission","cameraDisabled","cameraOnClick","onCameraChange","undefined","micActive","microphonePermission","micDisabled","micOnClick","onMicChange","screenShareDisabled","activeScreenShareStream","Stack","className","CommandButton","onKeyDownCapture","e","keyCode","localVideoRendererIsBusy","preventDefault","disabled","onClick","CallVideoIcon","size","CallVideoOffIcon","MicIcon","MicOffIcon","isLocalScreenShareSupportedInBrowser","onScreenShareChange","screenShareActive","CallControlCloseTrayIcon","CallControlPresentNewIcon","onEndCallClick","compressedMode","CallEndIcon","mainStackTokens","childrenGap","micStackTokens","dropDownStyles","caretDownWrapper","dropdownItem","fontWeight","dropdown","title","label","localSettingsContainer","maxWidth","minWidth","maxHeight","marginTop","LocalSettings","getDropDownList","list","map","item","val","key","id","text","name","deviceType","tokens","Dropdown","placeholder","options","videoDeviceList","styles","length","defaultSelectedKey","videoDeviceInfo","onChange","index","setVideoDeviceInfo","audioDeviceList","audioDeviceInfo","setAudioDeviceInfo","deviceManager","selectMicrophone","utils","getAppServiceUrl","window","location","origin","getTokenForUser","a","fetch","response","ok","json","Error","getFeedbackSettings","retJson","isFeedbackEnabled","toLowerCase","getRecordingSettings","isRecordingEnabled","getRefreshedTokenForUser","identity","content","token","startRecording","message","output","errorMessage","stopRecording","serverCallId","isSelectedAudioDeviceInList","selected","filter","isSelectedVideoDeviceInList","isMobileSession","navigator","userAgent","match","isSmallScreen","innerWidth","innerHeight","isUnsupportedBrowser","getId","identifier","kind","communicationUserId","phoneNumber","microsoftTeamsUserId","getStreamId","userId","stream","mediaStreamType","isOnIphoneAndNotSafari","includes","getBuildTime","setCallAgent","callAgent","type","callAdded","addedCall","call","callRemoved","removedCall","incomingCallEndReason","direction","callEndReason","setCallState","callState","setParticipants","participants","remoteParticipants","setRecordingActive","isActive","active","setTranscribingActive","setDominantParticipants","dominantParticipants","setMic","mic","setShareScreen","shareScreen","setDeviceManager","setMicrophonePermission","setCameraPermission","setAudioDeviceList","setVideoDeviceList","setUserId","setCallClient","callClient","setLocalVideoStream","localVideoStream","addScreenShareStream","user","AudioChangedEvent","participantId","isUnMuted","timeStamp","this","Date","now","participant","lastUnMuted","VideoChangedEvent","isVideoOn","SelectionState","displayName","RemoteStreamSelector","dominantParticipantsCount","dispatch","dipatch","batchedCommands","compareFn","b","processCommands","commands","forEach","command","get","process","console","error","sortedList","values","sort","log","slice","participantAudioChanged","isUnmuted","push","participantVideoChanged","participantStateChanged","state","set","delete","Map","setInterval","ProcessingDelayInSeconds","Singleton","getInstance","Constants","INCOMING","RINGING","CONNECTING","CONNECTED","LOBBY","DEFAULT_IMG_WIDTH","CROP_MEDIA","CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID","LOCAL_VIDEO_PREVIEW_ID","MINI_HEADER_WINDOW_WIDTH","DOMINANT_PARTICIPANTS_COUNT","CommandPanelTypes","setMicrophone","getState","calls","controls","unmute","mute","subscribeToParticipant","remoteStreamSelector","on","isMuted","videoStreams","isAvailable","added","addedStream","updateAudioDevices","getMicrophones","microphoneList","devices","updateVideoDevices","getCameras","cameraList","subscribeToDeviceManager","askDevicePermission","audio","video","then","endCall","hangUp","catch","joinGroup","context","callOptions","join","joinTeamsMeeting","locator","removeParticipant","itemStyles","root","alignSelf","primaryText","overFlowButtonStyles","participantStackStyle","paddingLeft","paddingRight","iconStyle","margin","participantStackTokens","onRenderItem","Persona","PersonaSize","size32","presence","PersonaPresence","online","offline","isSpeaking","isScreenSharing","FontIcon","iconName","onRenderOverflowButton","overflowItems","IconButton","role","menuIconProps","menuProps","items","connector","connect","sdk","screenShareStreams","streams","screenShareStream","i","OverflowSet","vertical","getParticipants","fullHeightStyles","overflowY","paneFooterStyles","marginBottom","paneFooterTokens","textFieldStyles","field","fieldGroup","paneHeaderStyle","paneHeaderTextStyle","float","footerMainTextStyle","copyLinkButtonStyle","copyIconStyle","settingsContainerStyle","copyJoinLink","document","getElementById","select","execCommand","Footer","Separator","TextField","value","baseURI","PrimaryButton","Icon","rendererView","CommandPanel","Item","selectedPane","People","Settings","pivotItemStyles","linkIsSelected","themePrimary","link","verticalAlign","headerContainer","boxShadow","flexDirection","justifyContent","alignItems","headerCenteredContainer","feedbackContainer","recordingIcon","pointerEvents","separatorContainerStyle","recordingSplitter","pivotItemStyle","separatorStyles","IconColor","blue","recordingItemStyle","left","top","bottom","conversationId","recordingStatus","status","recordingError","linkRef","React","useRef","useState","showContextualMenu","setShowContextualMenu","onShowContextualMenu","useCallback","ev","onHideContextualMenu","keys","onContextMenuItemClick","useMemo","iconProps","style","ref","href","TooltipHost","calloutProps","gapSpace","MoreIcon","aria-describedby","ContextualMenu","hidden","target","onItemClick","onDismiss","getCanvasBlob","canvas","Promise","resolve","toBlob","blob","uploadFeedback","feedback","screenShotCanvas","settings","blobServiceClient","BlobServiceClient","sasUri","containerClient","getContainerClient","containerName","blockBlobClient","getBlockBlobClient","feedbackId","serializedFeedback","JSON","stringify","logPromise","upload","screenShotPromise","screenShotBlob","uploadData","all","captureScreenshot","createElement","getContext","mediaDevices","getDisplayMedia","captureStream","track","getVideoTracks","capture","ImageCapture","grabFrame","bitmap","stop","drawImage","getTracks","isScreenShotAvailable","initialState","localVideo","attempts","isBeingRecorded","isBeingTranscribed","dialogBoxVisible","reducer","combineReducers","action","LocalVideoStream","newScreenShareStream","store","createStore","applyMiddleware","thunk","logs","createFeedback","feedbackType","comment","callId","comments","createGUID","FeedbackButton","iconOnly","setHidden","togglePopup","ariaLabel","toggleHidden","modalProps","isBlocking","main","screenShotStyle","objectFit","dialogContentProps","DialogType","largeHeader","subText","FeedbackPopup","setFeedbackType","setComment","guid","setGuid","isScreenShotDialogOn","setIsScreenShotDialogOn","screenShot","setScreenShot","isHidden","setIsHidden","takeScreenShot","submitFeedback","feedbackInput","Label","_","multiline","rows","Checkbox","checked","onTakeScreenShot","setIsParentHidden","src","toDataURL","alt","feedbackSubmitted","readOnly","Dialog","DialogFooter","DefaultButton","screenShotDialogContentProps","ScreenShotInstruction","actionable","forEveryone","endCallHandler","screenWidth","setScreenShare","screenShare","startScreenSharing","stopScreenSharing","test","setIsFeedbackEnabled","setIsRecordingEnabled","isRecordingOn","useEffect","recordingSettings","handleLocalVideoOnOff","stopVideo","startVideo","localVideoStreams","grow","Pivot","getTabId","itemKey","onLinkClick","setSelectedPane","None","togglePeople","initialSelectedKey","selectedKey","PivotItem","onRenderItemLink","SettingsIcon","outline","UserFriendsIcon","mediaGalleryStyle","borderRight","borderBottom","mediaGalleryGridStyle","background","neutralLighterAlt","substageMediaGalleryStyle","mediaGallerySubstageStyle","overflowX","videoHint","neutralLighter","textAlign","whiteSpace","textOverflow","mediaContainer","localVideoContainerStyle","LocalStreamMedia","activeStreamBeingRendered","setActiveStreamBeingRendered","imageProps","staticMediaSVG","toString","imageFit","ImageFit","contain","renderer","VideoStreamRenderer","createView","scalingMode","isMirrored","current","container","childElementCount","appendChild","dispose","Image","RemoteStreamMedia","streamId","showRenderLoading","setShowRenderLoading","isParticipantStreamSelected","renderRemoteStream","Spinner","SpinnerSize","xSmall","gridCol","setGridCol","gridRow","setGridRow","cols","warn","numRemoteParticipantsToRender","Math","min","numberStreamsToRender","num","max","participantsToLayout","isParticipantADominant","p","isParticipantBDominant","mainStageParticipants","substageParticipants","isSubstageVisible","gridTemplateRows","gridTemplateColumns","remoteParticipantsMediaGalleryItems","localParticipantMediaGalleryItem","unshift","getMediaGalleryTilesForParticipants","horizontal","fullScreenStyle","hiddenFullScreenStyle","loadingStyle","MediaFullScreen","loading","setLoading","headerStyles","containerStyles","minHeight","messageBarStyles","paneStyles","overlayStyles","hiddenContainerClassName","activeContainerClassName","ComplianceBanner","previousCallTranscribeState","setPreviousCallTranscribeState","previousCallRecordState","setPreviousCallRecordState","variant","setVariant","callTranscribeState","callRecordState","PrivacyPolicy","Link","underline","LearnMore","MessageBar","dismissButtonAriaLabel","getBannerMessage","modalPropsStyles","normal","DialogBox","isDialogBoxVisiblile","dismissDialogBox","messageBarType","MessageBarType","videoOptions","audioOptions","muted","deviceInfo","dialogBoxVisiblilty","dialogBoxVisibilty","activeScreenShare","horizontalAlign","disableShrink","Overlay","buttonsStackTokens","upperStackTokens","endCallContainerStyle","endCallTitleStyle","buttonStyle","videoCameraIconStyle","bottomStackFooterStyle","EndCall","rejoinHandler","VideoCameraEmphasisIcon","homeHandler","imgStyle","containerTokens","headerStyle","listStyleType","listStylePosition","upperStackStyle","imageStyleProps","textIndent","image","HomeScreen","meetingUrl","setMeetingUrl","heroSVG","imagePropsCard","basicCreditCardSVG","event","newValue","toggleStyle","imgStyles","toggleButtonsBarToken","localPreviewContainerStyle","neutralPrimaryAlt","toggleButtonsBarStyle","neutralQuaternaryAlt","localPreviewStyle","LocalPreview","cover","maximizeFrame","aria-label","Toggle","_ev","configurationStackTokens","mainContainerStyle","localSettingsContainerStyle","verticalStackStyle","inputBoxStyle","boxSizing","inputBoxTextStyle","inputBoxWarningStyle","labelFontStyle","overflowWrap","warningStyle","TextFieldStyleProps","wrapper","DisplayNameField","autoComplete","inputClassName","borderless","isEmpty","setName","setEmptyWarning","defaultValue","setupCallClient","unsupportedStateHandler","setLogLevel","CallClient","getDeviceManager","initCallClient","setupCallAgent","callEndedHandler","tokenResponse","userToken","tokenCredential","AzureCommunicationTokenCredential","tokenRefresher","refreshProactively","createCallAgent","info","getServerCallId","result","err","isScreenSharingOn","api","Features","Recording","callRecordingActive","isRecordingActive","Transcription","isTranscriptionActive","addedRemoteParticipant","removed","code","subCode","initCallAgent","updateDevices","ceil","random","emptyWarning","memoizedSetupCallClient","startCallHandler","ariaLive","labelPosition","sdkVersion","require","dependencies","lastUpdated","loadTheme","initializeIcons","AzureLogger","setTimeout","App","page","setPage","setCallEndReason","setScreenWidth","setWindowWidth","addEventListener","removeEventListener","getGroupIdFromUrl","URLSearchParams","search","getMeetingLink","encodedTeamsMeetingLink","decodeURIComponent","getGroupId","groupId","getLocator","meetingLink","encodeURIComponent","errorMsg","reload","split","iconTheme","componentStyles","SvgIcon","svgIconStyles","componentVariables","svgIconVariables","siteVariables","ReactDOM","render","Provider","theme"],"mappings":"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","file":"static/js/main.4b9b84cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.7c037def.svg\";","module.exports = __webpack_public_path__ + \"static/media/basicCreditCard.c2f80f80.svg\";","import { mergeStyles, getTheme } from '@fluentui/react';\n\nconst MODERATE_RED = '#d74654';\nconst palette = getTheme().palette;\nexport const mediaControlStyles = mergeStyles({\n  height: '3.75rem',\n  padding: '0 0.8125rem',\n  display: 'inline-block',\n  borderRadius: 7,\n  overflow: 'hidden'\n});\nexport const OkButtonStyles = mergeStyles({\n  position: 'relative',\n  right: '34%'\n});\nexport const controlButtonStyle = mergeStyles({\n  backgroundColor: palette.white,\n  width: '2rem',\n  height: '3.75rem',\n  border: '0.125rem',\n  borderRadius: 2,\n  marginRight: '0.4375rem',\n  color: palette.neutralSecondary\n});\nexport const controlButtonDisabledStyle = mergeStyles(controlButtonStyle, {\n  color: palette.neutralLight\n});\nexport const endCallButtonStyle = mergeStyles({\n  backgroundColor: MODERATE_RED,\n  width: '6.5625rem',\n  height: '2.1875rem',\n  border: '0.125rem',\n  marginRight: '0.75rem',\n  marginLeft: '0.75rem',\n  borderRadius: 2,\n  color: palette.white,\n  selectors: {\n    ':focus': { color: palette.white },\n    ':hover': { color: palette.white },\n    ':active': { color: palette.white }\n  }\n});\nexport const endCallButtonTextStyle = mergeStyles({\n  color: palette.white,\n  padding: '0.3125rem',\n  fontSize: '0.875rem',\n  lineHeight: '3.75rem'\n});\nexport const fullWidth = mergeStyles({\n  width: '100%'\n});\n","import * as React from 'react';\nimport { Stack, CommandButton } from '@fluentui/react';\nimport {\n  MicIcon,\n  MicOffIcon,\n  CallVideoIcon,\n  CallVideoOffIcon,\n  CallEndIcon,\n  CallControlPresentNewIcon,\n  CallControlCloseTrayIcon\n} from '@fluentui/react-icons-northstar';\nimport {\n  controlButtonStyle,\n  endCallButtonStyle,\n  endCallButtonTextStyle,\n  mediaControlStyles,\n  fullWidth,\n  controlButtonDisabledStyle\n} from './styles/MediaControls.styles';\nimport { ParticipantStream } from 'core/reducers';\n\nexport interface MediaControlsProps {\n  micActive: boolean;\n  screenShareActive: boolean;\n  activeScreenShareStream: ParticipantStream | undefined;\n  cameraActive: boolean;\n  cameraPermission: string;\n  microphonePermission: string;\n  localVideoRendererIsBusy: boolean;\n  compressedMode: boolean;\n  onMicChange(): void;\n  onCameraChange(): void;\n  onScreenShareChange(): void;\n  onEndCallClick(): void;\n  isLocalScreenShareSupportedInBrowser(): boolean;\n}\n\nexport const MediaControls = (props: MediaControlsProps): JSX.Element => {\n  const cameraActive = props.cameraPermission === 'Denied' ? false : props.cameraActive;\n  const cameraDisabled = props.cameraPermission === 'Denied';\n  const cameraOnClick = props.cameraPermission !== 'Denied' ? props.onCameraChange : undefined;\n  const micActive = props.microphonePermission === 'Denied' ? false : props.micActive;\n  const micDisabled = props.microphonePermission === 'Denied';\n  const micOnClick = props.microphonePermission !== 'Denied' ? props.onMicChange : undefined;\n  const screenShareDisabled = !!props.activeScreenShareStream;\n\n  return (\n    <Stack className={mediaControlStyles}>\n      <CommandButton\n        onKeyDownCapture={(e) => {\n          if (e.keyCode === 13 && props.localVideoRendererIsBusy) {\n            e.preventDefault();\n          }\n        }}\n        disabled={cameraDisabled}\n        onClick={cameraOnClick}\n        className={controlButtonStyle}\n      >\n        <div className={fullWidth}>\n          {cameraActive ? <CallVideoIcon size=\"medium\" /> : <CallVideoOffIcon size=\"medium\" />}\n        </div>\n      </CommandButton>\n      <CommandButton onClick={micOnClick} disabled={micDisabled} className={controlButtonStyle}>\n        <div className={fullWidth}>{micActive ? <MicIcon size=\"medium\" /> : <MicOffIcon size=\"medium\" />}</div>\n      </CommandButton>\n      {props.isLocalScreenShareSupportedInBrowser() && (\n        <CommandButton\n          disabled={screenShareDisabled}\n          onClick={props.onScreenShareChange}\n          className={screenShareDisabled ? controlButtonDisabledStyle : controlButtonStyle}\n        >\n          <div className={fullWidth}>\n            {props.screenShareActive ? (\n              <CallControlCloseTrayIcon size=\"medium\" />\n            ) : (\n              <CallControlPresentNewIcon size=\"medium\" />\n            )}\n          </div>\n        </CommandButton>\n      )}\n      <CommandButton\n        onClick={props.onEndCallClick}\n        className={props.compressedMode ? controlButtonStyle : endCallButtonStyle}\n      >\n        <div className={fullWidth}>\n          <CallEndIcon size=\"medium\" />\n          {!props.compressedMode && <span className={endCallButtonTextStyle}>Leave</span>}\n        </div>\n      </CommandButton>\n    </Stack>\n  );\n};\n","import { IStackTokens, mergeStyles, IDropdownStyles } from '@fluentui/react';\n\nexport const mainStackTokens: IStackTokens = {\n  childrenGap: '1.5rem'\n};\nexport const micStackTokens: IStackTokens = {\n  childrenGap: '0.75rem'\n};\nexport const dropDownStyles: Partial<IDropdownStyles> = {\n  caretDownWrapper: {\n    height: '2.5rem',\n    lineHeight: '2.5rem'\n  },\n  dropdownItem: {\n    fontWeight: 600,\n    fontSize: '0.875rem',\n    height: '2.5rem'\n  },\n  dropdown: { height: '2.5rem' },\n  title: {\n    fontWeight: 600,\n    fontSize: '0.875rem',\n    height: '2.5rem',\n    lineHeight: '2.3125rem'\n  },\n  label: {\n    fontWeight: 600,\n    fontSize: '0.875rem'\n  }\n};\nexport const localSettingsContainer = mergeStyles({\n  width: '100%',\n  maxWidth: '18.75rem',\n  minWidth: '12.5rem',\n  maxHeight: '14.125rem',\n  marginTop: '2.125rem'\n});\n","// © Microsoft Corporation. All rights reserved.\nimport React from 'react';\nimport { Stack, Dropdown, IDropdownOption } from '@fluentui/react';\nimport { VideoDeviceInfo, AudioDeviceInfo, DeviceManager } from '@azure/communication-calling';\nimport { localSettingsContainer, dropDownStyles, micStackTokens, mainStackTokens } from './styles/LocalSettings.styles';\n\nexport interface LocalSettingsProps {\n  deviceManager: DeviceManager;\n  videoDeviceList: VideoDeviceInfo[];\n  audioDeviceList: AudioDeviceInfo[];\n  videoDeviceInfo: VideoDeviceInfo;\n  audioDeviceInfo: AudioDeviceInfo;\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\n}\n\nexport const LocalSettings = (props: LocalSettingsProps): JSX.Element => {\n  const defaultPlaceHolder = 'Select an option';\n  const cameraLabel = 'Camera';\n  const micLabel = 'Microphone';\n\n  const getDropDownList = (list: Array<VideoDeviceInfo | AudioDeviceInfo>): IDropdownOption[] => {\n    return list.map((item) => ({\n      val: item,\n      key: item.id,\n      text: item.name === '' ? item.deviceType : item.name\n    }));\n  };\n  return (\n    <Stack className={localSettingsContainer} tokens={mainStackTokens}>\n      <Dropdown\n        placeholder={defaultPlaceHolder}\n        label={cameraLabel}\n        options={getDropDownList(props.videoDeviceList)}\n        styles={dropDownStyles}\n        disabled={props.videoDeviceList.length === 0}\n        defaultSelectedKey={props.videoDeviceInfo ? props.videoDeviceInfo.id : ''}\n        onChange={(...args) => {\n          const index = args[2] ?? 0;\n          props.setVideoDeviceInfo(props.videoDeviceList[index]);\n        }}\n      />\n      <Stack tokens={micStackTokens}>\n        <Dropdown\n          placeholder={defaultPlaceHolder}\n          label={micLabel}\n          styles={dropDownStyles}\n          disabled={props.audioDeviceList.length === 0}\n          options={getDropDownList(props.audioDeviceList)}\n          defaultSelectedKey={props.audioDeviceInfo ? props.audioDeviceInfo.id : ''}\n          onChange={(...args) => {\n            const index = args[2] ?? 0;\n            props.setAudioDeviceInfo(props.audioDeviceList[index]);\n            props.deviceManager.selectMicrophone(props.audioDeviceList[index])\n          }}\n        />\n      </Stack>\n    </Stack>\n  );\n};\n","// © Microsoft Corporation. All rights reserved.\nimport { AudioDeviceInfo, VideoDeviceInfo, RemoteVideoStream } from '@azure/communication-calling';\nimport { CommunicationIdentifierKind } from '@azure/communication-common';\nimport { CommunicationUserToken } from '@azure/communication-identity';\nimport { FeedbackSettings } from 'feedbacks/FeedbackSettings';\nimport preval from 'preval.macro';\nimport { RecordingSettings } from '../recording/RecordingSettings';\nexport declare interface RecordingApiResponse {\n  message: string;\n}\nexport declare interface RecordingActionResponse {\n  message: string;\n}\n\nexport const utils = {\n  getAppServiceUrl: (): string => {\n    return window.location.origin;\n  },\n  getTokenForUser: async (): Promise<CommunicationUserToken> => {\n    const response = await fetch('/token');\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Invalid token response');\n  },\n  getFeedbackSettings: async (): Promise<FeedbackSettings> => {\n    const response = await fetch('/feedbackSettings');\n    if (!response.ok) {\n      throw new Error('Failed to get blob settings from server!');\n    }\n    const retJson = await response.json();\n    return {\n      ...retJson,\n      isFeedbackEnabled: retJson.isFeedbackEnabled.toLowerCase() === 'true'\n    };\n  },\n  getRecordingSettings: async (): Promise<RecordingSettings> => {\n    const response = await fetch('/recordingSettings');\n    if (!response.ok) {\n      throw new Error('Failed to get recording settings from server!');\n    }\n    const retJson = await response.json();\n    return {\n      ...retJson,\n      isRecordingEnabled: retJson.isRecordingEnabled.toLowerCase() === 'true'\n    };\n  },\n  getRefreshedTokenForUser: async (identity: string): Promise<string> => {\n    const response = await fetch(`/refreshToken/${identity}`);\n    if (response.ok) {\n      const content = await response.json();\n      return content.token;\n    }\n    throw new Error('Invalid token response');\n  },\n  startRecording: async (id: string): Promise<RecordingApiResponse> => {\n    try {\n      const response = await fetch('/recording/startRecording?serverCallId=' + id);\n      if (response.ok) {\n        return { message: '' };\n      }\n      const output = await response.json();\n      const errorMessage = output.message || 'Recording could not be started';\n      return { message: errorMessage };\n    } catch (e) {\n      return { message: 'Recording could not be started' };\n    }\n  },\n  stopRecording: async (serverCallId: string): Promise<RecordingActionResponse> => {\n    try {\n      const response = await fetch('/recording/stopRecording?serverCallId=' + serverCallId);\n      if (response.ok) {\n        return { message: '' };\n      }\n      return { message: 'Recording could not be stopped' };\n    } catch (e) {\n      return { message: 'Recording could not be stopped' };\n    }\n  },\n  isSelectedAudioDeviceInList(selected: AudioDeviceInfo, list: AudioDeviceInfo[]): boolean {\n    return list.filter((item) => item.name === selected.name).length > 0;\n  },\n  isSelectedVideoDeviceInList(selected: VideoDeviceInfo, list: VideoDeviceInfo[]): boolean {\n    return list.filter((item) => item.name === selected.name).length > 0;\n  },\n  isMobileSession(): boolean {\n    return window.navigator.userAgent.match(/(iPad|iPhone|iPod|Android|webOS|BlackBerry|Windows Phone)/g)\n      ? true\n      : false;\n  },\n  isSmallScreen(): boolean {\n    return window.innerWidth < 700 || window.innerHeight < 400;\n  },\n  isUnsupportedBrowser(): boolean {\n    return window.navigator.userAgent.match(/(Firefox)/g) ? true : false;\n  },\n  getId: (identifier: CommunicationIdentifierKind): string => {\n    switch (identifier.kind) {\n      case 'communicationUser':\n        return identifier.communicationUserId;\n      case 'phoneNumber':\n        return identifier.phoneNumber;\n      case 'microsoftTeamsUser':\n        return identifier.microsoftTeamsUserId;\n      case 'unknown':\n        return identifier.id;\n      default:\n        return '';\n    }\n  },\n  getStreamId: (userId: string, stream: RemoteVideoStream): string => {\n    return `${userId}-${stream.id}-${stream.mediaStreamType}`;\n  },\n  /*\n   * TODO:\n   *  Remove this method once the SDK improves error handling for unsupported browser.\n   */\n  isOnIphoneAndNotSafari(): boolean {\n    const userAgent = navigator.userAgent;\n    // Chrome uses 'CriOS' in user agent string and Firefox uses 'FxiOS' in user agent string.\n    if (userAgent.includes('iPhone') && (userAgent.includes('FxiOS') || userAgent.includes('CriOS'))) {\n      return true;\n    }\n    return false;\n  },\n  getBuildTime: (): string => {\n    const dateTimeStamp = preval`module.exports = new Date().toLocaleString();`;\n    return dateTimeStamp;\n  }\n};\n","import { CallEndReason, Call, RemoteParticipant, CallAgent } from '@azure/communication-calling';\nimport { SelectionState } from '../RemoteStreamSelector';\n\nconst SET_CALL_AGENT = 'SET_CALL_AGENT';\nconst CALL_ADDED = 'CALL_ADDED';\nconst CALL_REMOVED = 'CALL_REMOVED';\nconst SET_CALL_STATE = 'SET_CALL_STATE';\nconst SET_PARTICIPANTS = 'SET_PARTICIPANTS';\nconst SET_RECORDING_ACTIVE = 'SET_RECORDING_ACTIVE';\nconst SET_TRANSCRIBING_ACTIVE = 'SET_TRANSCRIBING_ACTIVE';\nconst SET_DOMINANT_PARTICIPANTS = 'SET_DOMINANT_PARTICIPANTS';\nconst START_RECORDING = 'START_RECORDING';\nconst STOP_RECORDING = 'STOP_RECORDING';\nconst SET_SERVER_CALL_ID = 'SET_SERVER_CALL_ID';\nconst DIALOGBOX_VISIBLE = 'DIALOGBOX_VISIBLE';\nconst RECORDING_ERROR = 'RECORDING_ERROR';\n\ninterface SetCallAgentAction {\n  type: typeof SET_CALL_AGENT;\n  callAgent: CallAgent;\n}\n\ninterface CallAddedAction {\n  type: typeof CALL_ADDED;\n  call: Call;\n}\n\ninterface CallRemovedAction {\n  type: typeof CALL_REMOVED;\n  call: Call | undefined;\n  incomingCallEndReason: CallEndReason | undefined;\n  callEndReason: CallEndReason | undefined;\n}\n\ninterface SetCallStateAction {\n  type: typeof SET_CALL_STATE;\n  callState: string;\n}\n\ninterface SetParticipantsAction {\n  type: typeof SET_PARTICIPANTS;\n  remoteParticipants: RemoteParticipant[];\n}\n\ninterface SetRecordingActiveAction {\n  type: typeof SET_RECORDING_ACTIVE;\n  active: boolean;\n}\n\ninterface SetTranscribingActiveAction {\n  type: typeof SET_TRANSCRIBING_ACTIVE;\n  active: boolean;\n}\n\ninterface SetDominantParticipantsAction {\n  type: typeof SET_DOMINANT_PARTICIPANTS;\n  dominantParticipants: SelectionState[];\n}\n\ninterface StartRecordingAction {\n  type: typeof START_RECORDING;\n  status: 'STARTED';\n}\n\ninterface StopRecordingAction {\n  type: typeof STOP_RECORDING;\n  status: 'STOPPED';\n}\n\ninterface SetServerCallIdAction {\n  type: typeof SET_SERVER_CALL_ID;\n  serverCallId: string;\n}\n\ninterface DialogBoxVisibleAction {\n  type: typeof DIALOGBOX_VISIBLE;\n  dialogBoxVisible: boolean;\n}\n\ninterface RecordingErrorAction {\n  type: typeof RECORDING_ERROR;\n  recordingError: string;\n}\n\nexport const setCallAgent = (callAgent: CallAgent): SetCallAgentAction => {\n  return {\n    type: SET_CALL_AGENT,\n    callAgent\n  };\n};\n\nexport const callAdded = (addedCall: Call): CallAddedAction => {\n  return {\n    type: CALL_ADDED,\n    call: addedCall\n  };\n};\n\nexport const callRemoved = (removedCall: Call): CallRemovedAction => {\n  return {\n    type: CALL_REMOVED,\n    call: undefined,\n    incomingCallEndReason: removedCall.direction === 'Incoming' ? removedCall.callEndReason : undefined,\n    callEndReason: removedCall.callEndReason\n  };\n};\n\nexport const setCallState = (callState: string): SetCallStateAction => {\n  return {\n    type: SET_CALL_STATE,\n    callState\n  };\n};\n\nexport const setParticipants = (participants: RemoteParticipant[]): SetParticipantsAction => {\n  return {\n    type: SET_PARTICIPANTS,\n    remoteParticipants: participants\n  };\n};\n\nexport const setRecordingActive = (isActive: boolean): SetRecordingActiveAction => {\n  return {\n    type: SET_RECORDING_ACTIVE,\n    active: isActive\n  };\n};\n\nexport const setTranscribingActive = (isActive: boolean): SetTranscribingActiveAction => {\n  return {\n    type: SET_TRANSCRIBING_ACTIVE,\n    active: isActive\n  };\n};\n\nexport const setDominantParticipants = (selected: SelectionState[]): SetDominantParticipantsAction => {\n  return {\n    type: SET_DOMINANT_PARTICIPANTS,\n    dominantParticipants: selected\n  };\n};\n\nexport const startRecording = (): StartRecordingAction => {\n  return {\n    type: 'START_RECORDING',\n    status: 'STARTED'\n  };\n};\n\nexport const stopRecording = (): StopRecordingAction => {\n  return {\n    type: 'STOP_RECORDING',\n    status: 'STOPPED'\n  };\n};\n\nexport const setServerCallId = (serverCallId: string): SetServerCallIdAction => {\n  return {\n    type: 'SET_SERVER_CALL_ID',\n    serverCallId\n  };\n};\n\nexport const dialogBoxVisible = (dialogBoxVisible: boolean): DialogBoxVisibleAction => {\n  return {\n    type: 'DIALOGBOX_VISIBLE',\n    dialogBoxVisible\n  };\n};\n\nexport const recordingError = (recordingError: string): RecordingErrorAction => {\n  return {\n    type: 'RECORDING_ERROR',\n    recordingError\n  };\n};\n\nexport {\n  SET_CALL_AGENT,\n  CALL_ADDED,\n  CALL_REMOVED,\n  SET_CALL_STATE,\n  SET_PARTICIPANTS,\n  SET_RECORDING_ACTIVE,\n  SET_TRANSCRIBING_ACTIVE,\n  SET_DOMINANT_PARTICIPANTS,\n  START_RECORDING,\n  STOP_RECORDING,\n  SET_SERVER_CALL_ID,\n  RECORDING_ERROR,\n  DIALOGBOX_VISIBLE\n};\n\nexport type CallTypes =\n  | SetCallAgentAction\n  | SetParticipantsAction\n  | SetDominantParticipantsAction\n  | SetCallStateAction\n  | CallAddedAction\n  | CallRemovedAction\n  | SetRecordingActiveAction\n  | SetTranscribingActiveAction\n  | StartRecordingAction\n  | StopRecordingAction\n  | SetServerCallIdAction\n  | RecordingErrorAction\n  | DialogBoxVisibleAction;\n","const SET_MIC = 'SET_MIC';\nconst SET_SHARE_SCREEN = 'SET_SHARE_SCREEN';\n\ninterface SetMicAction {\n  type: typeof SET_MIC;\n  mic: boolean;\n}\n\ninterface SetShareScreenAction {\n  type: typeof SET_SHARE_SCREEN;\n  shareScreen: boolean;\n}\n\nexport const setMic = (mic: boolean): SetMicAction => {\n  return {\n    type: SET_MIC,\n    mic\n  };\n};\n\nexport const setShareScreen = (shareScreen: boolean): SetShareScreenAction => {\n  return {\n    type: SET_SHARE_SCREEN,\n    shareScreen\n  };\n};\n\nexport { SET_MIC, SET_SHARE_SCREEN };\n\nexport type ControlTypes = SetMicAction | SetShareScreenAction;\n","import { AudioDeviceInfo, VideoDeviceInfo, DeviceManager } from '@azure/communication-calling';\n\nconst SET_DEVICE_MANAGER = 'SET_DEVICE_MANAGER';\nconst SET_AUDIO_DEVICE_INFO = 'SET_AUDIO_DEVICE_INFO';\nconst SET_VIDEO_DEVICE_INFO = 'SET_VIDEO_DEVICE_INFO';\nconst SET_AUDIO_DEVICE_LIST = 'SET_AUDIO_DEVICE_LIST';\nconst SET_VIDEO_DEVICE_LIST = 'SET_VIDEO_DEVICE_LIST';\nconst SET_MICROPHONE_PERMISSION = 'SET_MICROPHONE_PERMISSION';\nconst SET_CAMERA_PERMISSION = 'SET_CAMERA_PERMISSION';\n\ninterface SetDeviceManagerAction {\n  type: typeof SET_DEVICE_MANAGER;\n  deviceManager: DeviceManager;\n}\n\ninterface SetMicrophonePermission {\n  type: typeof SET_MICROPHONE_PERMISSION;\n  microphonePermission: string;\n}\n\ninterface SetCameraPermission {\n  type: typeof SET_CAMERA_PERMISSION;\n  cameraPermission: string;\n}\n\ninterface SetAudioDeviceAction {\n  type: typeof SET_AUDIO_DEVICE_INFO;\n  audioDeviceInfo: AudioDeviceInfo | undefined;\n}\n\ninterface SetVideoDeviceAction {\n  type: typeof SET_VIDEO_DEVICE_INFO;\n  videoDeviceInfo: VideoDeviceInfo | undefined;\n}\n\ninterface SetAudioDeviceListAction {\n  type: typeof SET_AUDIO_DEVICE_LIST;\n  audioDeviceList: AudioDeviceInfo[];\n}\n\ninterface SetVideoDeviceListAction {\n  type: typeof SET_VIDEO_DEVICE_LIST;\n  videoDeviceList: VideoDeviceInfo[];\n}\n\nexport const setDeviceManager = (deviceManager: DeviceManager): SetDeviceManagerAction => {\n  return {\n    type: SET_DEVICE_MANAGER,\n    deviceManager\n  };\n};\n\nexport const setMicrophonePermission = (microphonePermission: string): SetMicrophonePermission => {\n  return {\n    type: SET_MICROPHONE_PERMISSION,\n    microphonePermission\n  };\n};\n\nexport const setCameraPermission = (cameraPermission: string): SetCameraPermission => {\n  return {\n    type: SET_CAMERA_PERMISSION,\n    cameraPermission\n  };\n};\n\nexport const setAudioDeviceInfo = (audioDeviceInfo: AudioDeviceInfo | undefined): SetAudioDeviceAction => {\n  return {\n    type: SET_AUDIO_DEVICE_INFO,\n    audioDeviceInfo\n  };\n};\n\nexport const setVideoDeviceInfo = (videoDeviceInfo: VideoDeviceInfo | undefined): SetVideoDeviceAction => {\n  return {\n    type: SET_VIDEO_DEVICE_INFO,\n    videoDeviceInfo\n  };\n};\n\nexport const setAudioDeviceList = (audioDeviceList: AudioDeviceInfo[]): SetAudioDeviceListAction => {\n  return {\n    type: SET_AUDIO_DEVICE_LIST,\n    audioDeviceList\n  };\n};\n\nexport const setVideoDeviceList = (videoDeviceList: VideoDeviceInfo[]): SetVideoDeviceListAction => {\n  return {\n    type: SET_VIDEO_DEVICE_LIST,\n    videoDeviceList\n  };\n};\nexport {\n  SET_DEVICE_MANAGER,\n  SET_AUDIO_DEVICE_INFO,\n  SET_VIDEO_DEVICE_INFO,\n  SET_VIDEO_DEVICE_LIST,\n  SET_AUDIO_DEVICE_LIST,\n  SET_CAMERA_PERMISSION,\n  SET_MICROPHONE_PERMISSION\n};\n\nexport type DeviceTypes =\n  | SetDeviceManagerAction\n  | SetAudioDeviceAction\n  | SetVideoDeviceAction\n  | SetMicrophonePermission\n  | SetCameraPermission\n  | SetAudioDeviceListAction\n  | SetVideoDeviceListAction;\n","import { CallClient } from '@azure/communication-calling';\n\nconst SET_USERID = 'SET_USERID';\nconst SET_CALL_CLIENT = 'SET_CALL_CLIENT';\nconst SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\n\ninterface SetUserIdAction {\n  type: typeof SET_USERID;\n  userId: string;\n}\n\ninterface SetCallClient {\n  type: typeof SET_CALL_CLIENT;\n  callClient: CallClient;\n}\n\ninterface SetDisplayNameAction {\n  type: typeof SET_DISPLAY_NAME;\n  displayName: string;\n}\n\nexport const setUserId = (userId: string): SetUserIdAction => {\n  return {\n    type: SET_USERID,\n    userId\n  };\n};\n\nexport const setCallClient = (callClient: CallClient): SetCallClient => {\n  return {\n    type: SET_CALL_CLIENT,\n    callClient\n  };\n};\n\nexport const setDisplayName = (displayName: string): SetDisplayNameAction => {\n  return {\n    type: SET_DISPLAY_NAME,\n    displayName\n  };\n};\n\nexport { SET_USERID, SET_CALL_CLIENT, SET_DISPLAY_NAME };\n\nexport type SdkTypes = SetUserIdAction | SetCallClient | SetDisplayNameAction;\n","import { LocalVideoStream, RemoteParticipant, RemoteVideoStream } from '@azure/communication-calling';\n\nconst SET_LOCAL_PREVIEW_RENDERER = 'SET_LOCAL_PREVIEW_RENDERER';\nconst SET_LOCAL_VIDEO_STREAM = 'SET_LOCAL_STREAM';\nconst ADD_STREAM = 'ADD_STREAM';\nconst REMOVE_STREAM = 'REMOVE_STREAM';\nconst ADD_SCREENSHARE_STREAM = 'ADD_SCREENSHARE_STREAM';\nconst REMOVE_SCREENSHARE_STREAM = 'REMOVE_SCREENSHARE_STREAM';\n\ninterface SetLocalStreamAction {\n  type: typeof SET_LOCAL_VIDEO_STREAM;\n  localVideoStream: LocalVideoStream | undefined;\n}\n\ninterface AddScreenShareStreamAction {\n  type: typeof ADD_SCREENSHARE_STREAM;\n  stream: RemoteVideoStream;\n  user: RemoteParticipant;\n}\n\ninterface RemoveScreenShareStreamAction {\n  type: typeof REMOVE_SCREENSHARE_STREAM;\n  stream: RemoteVideoStream;\n  user: RemoteParticipant;\n}\n\nexport const setLocalVideoStream = (localVideoStream: LocalVideoStream | undefined): SetLocalStreamAction => {\n  return {\n    type: SET_LOCAL_VIDEO_STREAM,\n    localVideoStream\n  };\n};\n\nexport const addScreenShareStream = (\n  stream: RemoteVideoStream,\n  user: RemoteParticipant\n): AddScreenShareStreamAction => {\n  return {\n    type: ADD_SCREENSHARE_STREAM,\n    stream,\n    user\n  };\n};\n\nexport const removeScreenShareStream = (\n  stream: RemoteVideoStream,\n  user: RemoteParticipant\n): RemoveScreenShareStreamAction => {\n  return {\n    type: REMOVE_SCREENSHARE_STREAM,\n    stream,\n    user\n  };\n};\n\nexport {\n  SET_LOCAL_PREVIEW_RENDERER,\n  SET_LOCAL_VIDEO_STREAM,\n  ADD_STREAM,\n  REMOVE_STREAM,\n  ADD_SCREENSHARE_STREAM,\n  REMOVE_SCREENSHARE_STREAM\n};\n\nexport type StreamTypes = SetLocalStreamAction | AddScreenShareStreamAction | RemoveScreenShareStreamAction;\n","import { setDominantParticipants } from './actions/calls';\nimport { Dispatch } from 'redux';\nimport { RemoteParticipantState } from '@azure/communication-calling';\n\ninterface Event {\n  participantId: string;\n  timeStamp: number;\n  process: Function;\n}\n\nclass AudioChangedEvent implements Event {\n  participantId: string;\n  timeStamp: number;\n  isUnMuted: boolean;\n\n  constructor(participantId: string, isUnMuted: boolean) {\n    this.participantId = participantId;\n    this.isUnMuted = isUnMuted;\n    this.timeStamp = Date.now();\n  }\n\n  process(participant: SelectionState): void {\n    if (this.isUnMuted && !participant.isUnMuted) {\n      participant.lastUnMuted = this.timeStamp;\n    }\n    participant.isUnMuted = this.isUnMuted;\n  }\n}\n\nclass VideoChangedEvent implements Event {\n  participantId: string;\n  timeStamp: number;\n  isVideoOn: boolean;\n\n  constructor(participantId: string, isVideoOn: boolean) {\n    this.participantId = participantId;\n    this.isVideoOn = isVideoOn;\n    this.timeStamp = Date.now();\n  }\n\n  process(participant: SelectionState): void {\n    participant.isVideoOn = this.isVideoOn;\n  }\n}\n\nexport class SelectionState {\n  isVideoOn: boolean;\n  isUnMuted: boolean;\n  lastUnMuted: number;\n  participantId: string;\n  displayName: string;\n\n  constructor(participantId: string, displayName: string, isUnMuted: boolean, isVideoOn: boolean) {\n    this.participantId = participantId;\n    this.displayName = displayName;\n    this.isUnMuted = isUnMuted;\n    this.isVideoOn = isVideoOn;\n    this.lastUnMuted = -1;\n  }\n}\n\nexport default class RemoteStreamSelector {\n  private readonly dominantParticipantsCount: number;\n  private readonly dipatch: Dispatch;\n  private batchedCommands: Event[];\n  private remoteParticipants: Map<string, SelectionState>;\n  private static ProcessingDelayInSeconds = 2000;\n  private static Singleton: RemoteStreamSelector;\n\n  constructor(dominantParticipantsCount: number, dispatch: Dispatch) {\n    this.dominantParticipantsCount = dominantParticipantsCount;\n    this.dipatch = dispatch;\n    this.batchedCommands = [];\n    this.remoteParticipants = new Map();\n\n    setInterval(\n      () => this.batchedCommands.length > 0 && this.processCommands(),\n      RemoteStreamSelector.ProcessingDelayInSeconds\n    );\n  }\n\n  private compareFn = (a: SelectionState, b: SelectionState): number => {\n    if (a.isVideoOn === b.isVideoOn) {\n      if (a.isUnMuted === b.isUnMuted) return b.lastUnMuted - a.lastUnMuted;\n      return a.isUnMuted ? -1 : 1;\n    }\n    return a.isVideoOn ? -1 : 1;\n  };\n\n  public processCommands = (commands = this.batchedCommands): void => {\n    commands.forEach((command) => {\n      const participant = this.remoteParticipants.get(command.participantId);\n      if (!participant) {\n        console.error(`RemoteStreamSelector: Participant ${command.participantId} not found`);\n        return;\n      }\n      command.process(participant);\n    });\n    this.batchedCommands = [];\n\n    const sortedList = [...this.remoteParticipants.values()].sort(this.compareFn);\n    console.log('RemoteStreamSelector: Participants sorted list', sortedList);\n\n    this.dipatch(setDominantParticipants(sortedList.slice(0, this.dominantParticipantsCount)));\n  };\n\n  public participantAudioChanged = (participantId: string, isUnmuted: boolean): void => {\n    this.batchedCommands.push(new AudioChangedEvent(participantId, isUnmuted));\n  };\n\n  public participantVideoChanged = (participantId: string, isVideoOn: boolean): void => {\n    this.batchedCommands.push(new VideoChangedEvent(participantId, isVideoOn));\n  };\n\n  public participantStateChanged = (\n    participantId: string,\n    displayName: string,\n    state: RemoteParticipantState,\n    isUnMuted: boolean,\n    isVideoOn: boolean\n  ): void => {\n    switch (state) {\n      case 'Connecting':\n        this.remoteParticipants.set(\n          participantId,\n          new SelectionState(participantId, displayName, isUnMuted, isVideoOn)\n        );\n        break;\n      case 'Connected':\n        this.remoteParticipants.set(\n          participantId,\n          new SelectionState(participantId, displayName, isUnMuted, isVideoOn)\n        );\n        this.participantAudioChanged(participantId, isUnMuted);\n        this.participantVideoChanged(participantId, isVideoOn);\n        break;\n      case 'Disconnected':\n        this.remoteParticipants.delete(participantId);\n        this.processCommands(); // Force update Redux list with removed participant.\n        break;\n    }\n  };\n\n  public static getInstance = (dominantParticipantsCount: number, dispatch: Dispatch): RemoteStreamSelector =>\n    (RemoteStreamSelector.Singleton =\n      RemoteStreamSelector.Singleton ?? new RemoteStreamSelector(dominantParticipantsCount, dispatch));\n}\n","export class Constants {\n  static INCOMING = 'Incoming';\n  static RINGING = 'Ringing';\n  static CONNECTING = 'Connecting';\n  static CONNECTED = 'Connected';\n  static LOBBY = 'InLobby';\n  static DEFAULT_IMG_WIDTH = 200;\n  static CROP_MEDIA = 'Crop';\n  static CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID = 'ConfigurationLocalVideoPreview';\n  static LOCAL_VIDEO_PREVIEW_ID = 'LocalVideoPreview';\n  static MINI_HEADER_WINDOW_WIDTH = 680;\n  static DOMINANT_PARTICIPANTS_COUNT = 1;\n}\n","import {\n  AudioDeviceInfo,\n  Call,\n  CommunicationServicesError,\n  GroupCallLocator,\n  JoinCallOptions,\n  DeviceManager,\n  DeviceAccess,\n  RemoteParticipant,\n  VideoDeviceInfo,\n  CallAgent,\n  CallClient,\n  HangUpOptions,\n  CallEndReason,\n  TeamsMeetingLinkLocator,\n  Features\n} from '@azure/communication-calling';\nimport { AzureCommunicationTokenCredential, CommunicationUserKind } from '@azure/communication-common';\nimport { CommunicationUserToken } from '@azure/communication-identity';\nimport { Dispatch } from 'redux';\nimport { utils, RecordingApiResponse, RecordingActionResponse } from '../Utils/Utils';\nimport {\n  callAdded,\n  callRemoved,\n  setCallState,\n  setParticipants,\n  setCallAgent,\n  setRecordingActive,\n  setTranscribingActive,\n  setServerCallId,\n  startRecording,\n  stopRecording,\n  recordingError\n} from './actions/calls';\nimport { setMic, setShareScreen } from './actions/controls';\nimport {\n  setAudioDeviceInfo,\n  setAudioDeviceList,\n  setCameraPermission,\n  setMicrophonePermission,\n  setVideoDeviceInfo,\n  setVideoDeviceList,\n  setDeviceManager\n} from './actions/devices';\nimport { setCallClient, setUserId } from './actions/sdk';\nimport { addScreenShareStream, removeScreenShareStream } from './actions/streams';\nimport { State } from './reducers';\nimport { setLogLevel } from '@azure/logger';\nimport RemoteStreamSelector from './RemoteStreamSelector';\nimport { Constants } from './constants';\n\nexport const setMicrophone = (mic: boolean) => {\n  return async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n    const state = getState();\n\n    if (state === undefined || state.calls.call === undefined) {\n      console.error('state or state.controls.mic is null');\n      return;\n    }\n\n    try {\n      if (!state.controls.mic) {\n        await state.calls.call.unmute();\n      } else {\n        await state.calls.call.mute();\n      }\n\n      dispatch(setMic(mic));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nexport const setShareUnshareScreen = (shareScreen: boolean) => {\n  return async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n    const state = getState();\n\n    if (state === undefined || state.calls.call === undefined) {\n      console.error('state or state.controls.shareScreen is null');\n      return;\n    }\n\n    try {\n      if (!state.controls.shareScreen) {\n        await state.calls.call.startScreenSharing();\n      } else {\n        await state.calls.call.stopScreenSharing();\n      }\n\n      dispatch(setShareScreen(shareScreen));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nconst subscribeToParticipant = (participant: RemoteParticipant, call: Call, dispatch: Dispatch): void => {\n  const remoteStreamSelector = RemoteStreamSelector.getInstance(Constants.DOMINANT_PARTICIPANTS_COUNT, dispatch);\n\n  participant.on('stateChanged', () => {\n    remoteStreamSelector.participantStateChanged(\n      utils.getId(participant.identifier),\n      participant.displayName ?? '',\n      participant.state,\n      !participant.isMuted,\n      participant.videoStreams[0].isAvailable\n    );\n    dispatch(setParticipants([...call.remoteParticipants.values()]));\n  });\n\n  participant.on('isMutedChanged', () => {\n    remoteStreamSelector.participantAudioChanged(utils.getId(participant.identifier), !participant.isMuted);\n  });\n\n  participant.on('isSpeakingChanged', () => {\n    dispatch(setParticipants([...call.remoteParticipants.values()]));\n  });\n\n  participant.on('videoStreamsUpdated', (e): void => {\n    e.added.forEach((addedStream) => {\n      if (addedStream.mediaStreamType === 'ScreenSharing') {\n        addedStream.on('isAvailableChanged', () => {\n          if (addedStream.isAvailable) {\n            dispatch(addScreenShareStream(addedStream, participant));\n          } else {\n            dispatch(removeScreenShareStream(addedStream, participant));\n          }\n        });\n\n        if (addedStream.isAvailable) {\n          dispatch(addScreenShareStream(addedStream, participant));\n        }\n      } else if (addedStream.mediaStreamType === 'Video') {\n        addedStream.on('isAvailableChanged', () => {\n          remoteStreamSelector.participantVideoChanged(utils.getId(participant.identifier), addedStream.isAvailable);\n        });\n      }\n    });\n    dispatch(setParticipants([...call.remoteParticipants.values()]));\n  });\n};\n\nconst updateAudioDevices = async (\n  deviceManager: DeviceManager,\n  dispatch: Dispatch,\n  getState: () => State\n): Promise<void> => {\n  const microphoneList: AudioDeviceInfo[] = await deviceManager.getMicrophones();\n  dispatch(setAudioDeviceList(microphoneList));\n\n  const state = getState();\n  if (state.devices.audioDeviceInfo === undefined && microphoneList.length > 0) {\n    dispatch(setAudioDeviceInfo(microphoneList[0]));\n    deviceManager.selectMicrophone(microphoneList[0]);\n  } else if (\n    state.devices.audioDeviceInfo &&\n    !utils.isSelectedAudioDeviceInList(state.devices.audioDeviceInfo, microphoneList)\n  ) {\n    deviceManager.selectMicrophone(state.devices.audioDeviceInfo);\n  }\n};\n\nconst updateVideoDevices = async (\n  deviceManager: DeviceManager,\n  dispatch: Dispatch,\n  getState: () => State\n): Promise<void> => {\n  const cameraList: VideoDeviceInfo[] = await deviceManager.getCameras();\n  dispatch(setVideoDeviceList(cameraList));\n\n  const state = getState();\n  if (state.devices.videoDeviceInfo === undefined) {\n    dispatch(setVideoDeviceInfo(cameraList[0]));\n  } else if (\n    state.devices.videoDeviceInfo &&\n    !utils.isSelectedVideoDeviceInList(state.devices.videoDeviceInfo, cameraList)\n  ) {\n    dispatch(setVideoDeviceInfo(state.devices.videoDeviceInfo));\n  }\n};\n\nconst subscribeToDeviceManager = async (\n  deviceManager: DeviceManager,\n  dispatch: Dispatch,\n  getState: () => State\n): Promise<void> => {\n  // listen for any new events\n  deviceManager.on('videoDevicesUpdated', async () => {\n    updateVideoDevices(deviceManager, dispatch, getState);\n  });\n\n  deviceManager.on('audioDevicesUpdated', async () => {\n    updateAudioDevices(deviceManager, dispatch, getState);\n  });\n\n  deviceManager.askDevicePermission({ audio: true, video: true }).then((e: DeviceAccess) => {\n    if (e.audio !== undefined) {\n      if (e.audio) {\n        dispatch(setMicrophonePermission('Granted'));\n\n        updateAudioDevices(deviceManager, dispatch, getState);\n      } else {\n        dispatch(setMicrophonePermission('Denied'));\n      }\n    }\n\n    if (e.video !== undefined) {\n      if (e.video) {\n        dispatch(setCameraPermission('Granted'));\n        updateVideoDevices(deviceManager, dispatch, getState);\n      } else {\n        dispatch(setCameraPermission('Denied'));\n      }\n    }\n  });\n};\n\nexport const updateDevices = () => {\n  return async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n    const state = getState();\n    const deviceManager = state.devices.deviceManager;\n\n    if (deviceManager == null) {\n      console.error('no device manager available');\n      return;\n    }\n\n    const cameraList: VideoDeviceInfo[] = await deviceManager.getCameras();\n\n    dispatch(setVideoDeviceList(cameraList));\n\n    const microphoneList: AudioDeviceInfo[] = await deviceManager.getMicrophones();\n\n    dispatch(setAudioDeviceList(microphoneList));\n  };\n};\n\nexport const startRecord = () => {\n  return async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n    const state = getState();\n    if (state.calls !== undefined && state.calls.serverCallId) {\n      const response: RecordingApiResponse = await utils.startRecording(state.calls.serverCallId);\n      if (response && !response.message) {\n        dispatch(startRecording());\n      } else {\n        dispatch(recordingError(response.message));\n        console.error(response.message);\n      }\n    } else {\n      console.error('serverCallId not available');\n      return;\n    }\n  };\n};\n\nexport const stopRecord = () => {\n  return async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n    const state = getState();\n    if (state.calls !== undefined && state.calls.serverCallId) {\n      const response: RecordingActionResponse = await utils.stopRecording(state.calls.serverCallId);\n      if (response && !response.message) {\n        dispatch(stopRecording());\n      } else {\n        console.error(response.message);\n      }\n    } else return;\n  };\n};\n\nexport const initCallAgent = (\n  callClient: CallClient,\n  name: string,\n  callEndedHandler: (reason: CallEndReason) => void\n) => {\n  return async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n    const tokenResponse: CommunicationUserToken = await utils.getTokenForUser();\n    const userToken = tokenResponse.token;\n    const userId = tokenResponse.user.communicationUserId;\n    dispatch(setUserId(userId));\n\n    const tokenCredential = new AzureCommunicationTokenCredential({\n      tokenRefresher: (): Promise<string> => {\n        return utils.getRefreshedTokenForUser(userId);\n      },\n      refreshProactively: true,\n      token: userToken\n    });\n    const callAgent: CallAgent = await callClient.createCallAgent(tokenCredential, { displayName: name });\n\n    if (callAgent === undefined) {\n      return;\n    }\n\n    dispatch(setCallAgent(callAgent));\n\n    callAgent.on('callsUpdated', (e: { added: Call[]; removed: Call[] }): void => {\n      e.added.forEach((addedCall) => {\n        console.log(`Call added : Call Id = ${addedCall.id}`);\n\n        const state = getState();\n        if (state.calls.call && addedCall.direction === 'Incoming') {\n          addedCall.hangUp();\n          return;\n        }\n\n        dispatch(callAdded(addedCall));\n\n        addedCall.on('stateChanged', (): void => {\n          dispatch(setCallState(addedCall.state));\n\n          if (addedCall.state === 'Connected') {\n            addedCall.info\n              .getServerCallId()\n              .then((result) => {\n                console.log('Conversation URL is - ' + result);\n                dispatch(setServerCallId(result));\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          }\n        });\n\n        dispatch(setCallState(addedCall.state));\n\n        addedCall.on('isScreenSharingOnChanged', (): void => {\n          dispatch(setShareScreen(addedCall.isScreenSharingOn));\n        });\n\n        dispatch(setShareScreen(addedCall.isScreenSharingOn));\n\n        addedCall.api(Features.Recording).on('isRecordingActiveChanged', (): void => {\n          const callRecordingActive = addedCall.api(Features.Recording).isRecordingActive;\n          if (callRecordingActive) {\n            dispatch(startRecording());\n          } else if (!callRecordingActive) {\n            dispatch(stopRecording());\n          }\n          dispatch(setRecordingActive(callRecordingActive));\n        });\n\n        // if you are not in a teams meeting call you will just get false\n        dispatch(setRecordingActive(addedCall.api(Features.Recording).isRecordingActive));\n\n        addedCall.api(Features.Transcription).on('isTranscriptionActiveChanged', (): void => {\n          dispatch(setTranscribingActive(addedCall.api(Features.Transcription).isTranscriptionActive));\n        });\n\n        dispatch(setTranscribingActive(addedCall.api(Features.Transcription).isTranscriptionActive));\n\n        // if remote participants have changed, subscribe to the added remote participants\n        addedCall.on('remoteParticipantsUpdated', (ev): void => {\n          // for each of the added remote participants, subscribe to events and then just update as well in case the update has already happened\n          ev.added.forEach((addedRemoteParticipant) => {\n            subscribeToParticipant(addedRemoteParticipant, addedCall, dispatch);\n            dispatch(setParticipants([...state.calls.remoteParticipants, addedRemoteParticipant]));\n          });\n\n          // We don't use the actual value we are just going to reset the remoteParticipants based on the call\n          if (ev.removed.length > 0) {\n            dispatch(setParticipants([...addedCall.remoteParticipants.values()]));\n          }\n        });\n\n        dispatch(setParticipants([...state.calls.remoteParticipants]));\n      });\n      e.removed.forEach((removedCall) => {\n        const state = getState();\n        if (state.calls.call && state.calls.call === removedCall) {\n          dispatch(callRemoved(removedCall));\n\n          // if we were not allowed into invited into a Teams call\n          if (\n            removedCall.callEndReason &&\n            removedCall.callEndReason.code === 0 &&\n            removedCall.callEndReason.subCode === 5854\n          ) {\n            removedCall.callEndReason && callEndedHandler(removedCall.callEndReason);\n            return;\n          }\n\n          if (removedCall.callEndReason && removedCall.callEndReason.code !== 0) {\n            removedCall.callEndReason && callEndedHandler(removedCall.callEndReason);\n            return;\n          }\n        }\n      });\n    });\n  };\n};\n\nexport const initCallClient = (unsupportedStateHandler: () => void) => {\n  return async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n    let callClient;\n\n    // check if chrome on ios OR firefox browser\n    if (utils.isOnIphoneAndNotSafari() || utils.isUnsupportedBrowser()) {\n      unsupportedStateHandler();\n      return;\n    }\n\n    try {\n      setLogLevel('verbose');\n      callClient = new CallClient();\n    } catch (e) {\n      unsupportedStateHandler();\n      return;\n    }\n\n    if (!callClient) {\n      return;\n    }\n\n    const deviceManager: DeviceManager = await callClient.getDeviceManager();\n\n    dispatch(setCallClient(callClient));\n    dispatch(setDeviceManager(deviceManager));\n    subscribeToDeviceManager(deviceManager, dispatch, getState);\n  };\n};\n\n// what does the forEveryone parameter really mean?\nexport const endCall = async (call: Call, options: HangUpOptions): Promise<void> => {\n  await call.hangUp(options).catch((e: CommunicationServicesError) => console.error(e));\n};\n\nconst joinGroup = async (\n  callAgent: CallAgent,\n  context: GroupCallLocator,\n  callOptions: JoinCallOptions\n): Promise<void> => {\n  try {\n    await callAgent.join(context, callOptions);\n  } catch (e) {\n    console.log('Failed to join a call', e);\n    return;\n  }\n};\n\nconst joinTeamsMeeting = async (\n  callAgent: CallAgent,\n  context: TeamsMeetingLinkLocator,\n  callOptions: JoinCallOptions\n): Promise<void> => {\n  try {\n    await callAgent.join(context, callOptions);\n  } catch (e) {\n    console.log('Failed to join a call', e);\n    return;\n  }\n};\n\nexport const join = async (\n  callAgent: CallAgent,\n  locator: GroupCallLocator | TeamsMeetingLinkLocator,\n  callOptions: JoinCallOptions\n): Promise<void> => {\n  const isGroupCallLocator = (locator: GroupCallLocator | TeamsMeetingLinkLocator): locator is GroupCallLocator => {\n    return true;\n  };\n\n  if (isGroupCallLocator(locator)) {\n    return joinGroup(callAgent, locator, callOptions);\n  } else {\n    return joinTeamsMeeting(callAgent, locator, callOptions);\n  }\n};\n\nexport const addParticipant = async (call: Call, user: CommunicationUserKind): Promise<void> => {\n  await call.addParticipant(user);\n};\n\nexport const removeParticipant = async (call: Call, user: CommunicationUserKind): Promise<void> => {\n  await call.removeParticipant(user).catch((e: CommunicationServicesError) => console.error(e));\n};\n","import React from 'react';\nimport { LocalSettings } from './LocalSettings';\nimport ParticipantStack from '../containers/ParticipantStack';\nimport { VideoDeviceInfo, AudioDeviceInfo, DeviceManager } from '@azure/communication-calling';\nimport { Stack } from '@fluentui/react';\nimport {\n  fullHeightStyles,\n  paneHeaderStyle,\n  settingsContainerStyle,\n  paneHeaderTextStyle\n} from './styles/CommandPanel.styles';\nimport { Footer } from './Footer';\n\nexport interface CommandPanelProps {\n  selectedPane: string;\n  videoDeviceInfo: VideoDeviceInfo;\n  videoDeviceList: VideoDeviceInfo[];\n  audioDeviceList: AudioDeviceInfo[];\n  audioDeviceInfo: AudioDeviceInfo;\n  setSelectedPane: any;\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\n  deviceManager: DeviceManager;\n}\nexport enum CommandPanelTypes {\n  None = 'none',\n  People = 'People',\n  Settings = 'Settings'\n}\n\nexport const CommandPanel = (props: CommandPanelProps): JSX.Element => {\n\n  return (\n    <Stack styles={fullHeightStyles}>\n      <Stack.Item className={paneHeaderStyle}>\n        <div className={paneHeaderTextStyle}>{props.selectedPane}</div>\n      </Stack.Item>\n      \n        {props.selectedPane === CommandPanelTypes.People && (\n          <Stack.Item styles={fullHeightStyles}>\n            <ParticipantStack />\n          </Stack.Item>\n        )}\n        {props.selectedPane === CommandPanelTypes.People && (\n          <Stack.Item>\n            <Footer />\n          </Stack.Item>\n        )}\n        {props.selectedPane === CommandPanelTypes.Settings && (\n          <Stack.Item>\n          <div className={settingsContainerStyle}>\n            <LocalSettings\n              videoDeviceList={props.videoDeviceList}\n              audioDeviceList={props.audioDeviceList}\n              audioDeviceInfo={props.audioDeviceInfo}\n              videoDeviceInfo={props.videoDeviceInfo}\n              setVideoDeviceInfo={props.setVideoDeviceInfo}\n              setAudioDeviceInfo={props.setAudioDeviceInfo}\n              deviceManager={props.deviceManager}\n            />\n          </div>\n          </Stack.Item>\n        )}\n      \n    </Stack>\n  );\n};\n","import { mergeStyles, IStackTokens, IPersonaStyles, IButtonStyles } from '@fluentui/react';\n\nconst BLACK = '#000000';\nexport const itemStyles: Partial<IPersonaStyles> = {\n  root: {\n    minWidth: 0,\n    padding: '0 0.25rem',\n    alignSelf: 'stretch',\n    height: 'auto',\n    width: '12.5rem'\n  },\n  primaryText: {\n    color: BLACK\n  }\n};\nexport const overFlowButtonStyles: IButtonStyles = {\n  root: {\n    minWidth: 0,\n    padding: '0 0.25rem',\n    alignSelf: 'stretch',\n    height: 'auto'\n  }\n};\nexport const participantStackStyle = mergeStyles({\n  maxHeight: '100%',\n  overflow: 'auto',\n  paddingLeft: '1.125rem',\n  paddingRight: '1.125rem'\n});\nexport const iconStyle = mergeStyles({\n  margin: '0.4375rem',\n  fontSize: '1rem'\n});\nexport const participantStackTokens: IStackTokens = {\n  childrenGap: '0.625rem',\n  padding: '0.625rem'\n};\n","import * as React from 'react';\nimport { Persona, PersonaSize, Stack, IconButton, PersonaPresence, FontIcon, OverflowSet } from '@fluentui/react';\nimport {\n  itemStyles,\n  participantStackStyle,\n  participantStackTokens,\n  overFlowButtonStyles,\n  iconStyle\n} from './styles/ParticipantStack.styles';\nimport { RemoteParticipant, Call } from '@azure/communication-calling';\nimport { CommunicationUserKind } from '@azure/communication-common';\nimport { ParticipantStream } from 'core/reducers';\nimport { utils } from '../Utils/Utils';\nimport { MicIcon, MicOffIcon } from '@fluentui/react-icons-northstar';\n\nexport interface ParticipantStackProps {\n  userId: string;\n  displayName: string;\n  call: Call;\n  callState: string;\n  screenShareStreams: ParticipantStream[];\n  remoteParticipants: RemoteParticipant[];\n  removeParticipant(user: CommunicationUserKind | undefined): void;\n}\nexport interface CallParticipant {\n  key: string;\n  name: string;\n  participant: RemoteParticipant | undefined;\n  state: string;\n  isScreenSharing: boolean;\n  isSpeaking: boolean;\n}\n\nconst onRenderItem = (item: any) => (\n  <>\n    <Persona\n      text={item.name}\n      styles={itemStyles}\n      size={PersonaSize.size32}\n      presence={item.state === 'Connected' ? PersonaPresence.online : PersonaPresence.offline}\n    />\n    {item.isSpeaking ? <MicIcon size=\"medium\" /> : <MicOffIcon size=\"medium\" />}\n    {item.isScreenSharing && <FontIcon className={iconStyle} iconName=\"ScreenCast\" />}\n  </>\n);\nconst onRenderOverflowButton = (overflowItems: any) => (\n  <IconButton\n    role=\"menuitem\"\n    title=\"More options\"\n    styles={overFlowButtonStyles}\n    menuIconProps={{ iconName: 'More' }}\n    menuProps={{ items: overflowItems }}\n  />\n);\nconst getParticipants = (\n  participants: CallParticipant[],\n  removeParticipant: (user: CommunicationUserKind | undefined) => void\n) =>\n  participants.map((item, i) => (\n    <OverflowSet\n      key={i}\n      items={[item]}\n      role=\"menubar\"\n      vertical={false}\n      onRenderOverflowButton={onRenderOverflowButton}\n      onRenderItem={onRenderItem}\n    />\n  ));\nexport const ParticipantStack = (props: ParticipantStackProps): JSX.Element => {\n  const activeScreenShareStream = props.screenShareStreams && props.screenShareStreams.length === 1;\n  const screenShareStream = props.screenShareStreams[0];\n  const participants: CallParticipant[] = props.remoteParticipants.map((participant) => {\n    const isScreenSharing = activeScreenShareStream ? screenShareStream.user === participant : false;\n    return {\n      key: utils.getId(participant.identifier),\n      name: participant.displayName ?? utils.getId(participant.identifier),\n      participant: participant,\n      state: participant.state,\n      isScreenSharing: isScreenSharing,\n      isSpeaking: participant.isSpeaking\n    };\n  });\n  participants.push({\n    key: `${props.userId} (You)`,\n    name: `${props.displayName} (You)`,\n    participant: undefined,\n    state: 'Connected',\n    isScreenSharing: activeScreenShareStream ? utils.getId(screenShareStream.user.identifier) === props.userId : false,\n    isSpeaking: !props.call.isMuted\n  });\n  return (\n    <Stack className={participantStackStyle} tokens={participantStackTokens}>\n      {getParticipants(participants, props.removeParticipant)}\n    </Stack>\n  );\n};\n","import { connect } from 'react-redux';\nimport { removeParticipant } from '../core/sideEffects';\nimport { State } from '../core/reducers';\nimport { ParticipantStack } from '../components/ParticipantStack';\nimport { CommunicationUserKind } from '@azure/communication-common';\n\nconst mapStateToProps = (state: State) => ({\n  userId: state.sdk.userId,\n  displayName: state.calls.callAgent?.displayName,\n  call: state.calls.call,\n  callState: state.calls.callState,\n  remoteParticipants: state.calls.remoteParticipants,\n  screenShareStreams: state.streams.screenShareStreams,\n  removeParticipant: (user: CommunicationUserKind | undefined) => {\n    if (state.calls.call && user) {\n      removeParticipant(state.calls.call, user);\n    }\n  }\n});\n\nconst connector: any = connect(mapStateToProps);\nexport default connector(ParticipantStack);\n","import { IStackStyles, mergeStyles, ITextFieldStyles, IStackTokens, getTheme } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const fullHeightStyles: IStackStyles = {\n  root: {\n    height: '100%',\n    overflowY: 'auto'\n  }\n};\nexport const paneFooterStyles: IStackStyles = {\n  root: {\n    marginBottom: '1.25rem'\n  }\n};\nexport const paneFooterTokens: IStackTokens = {\n  childrenGap: '0.3125rem'\n};\nexport const textFieldStyles: Partial<ITextFieldStyles> = {\n  field: {\n    color: palette.neutralSecondary,\n    padding: 0\n  },\n  root: {\n    marginLeft: '1rem',\n    marginRight: '1rem'\n  },\n  fieldGroup: {\n    border: 'none'\n  }\n};\n\nexport const paneHeaderStyle = mergeStyles({\n  height: '4.3125rem'\n});\n\nexport const paneHeaderTextStyle = mergeStyles({\n  fontSize: '1.375rem',\n  fontWeight: 600,\n  width: '69px',\n  float: 'left',\n  margin: '20px'\n});\nexport const footerMainTextStyle = mergeStyles({\n  fontWeight: 600,\n  fontSize: '1rem',\n  marginLeft: '1rem',\n  marginRight: '1rem'\n});\nexport const copyLinkButtonStyle = mergeStyles({\n  fontWeight: 600,\n  fontSize: '0.875rem', // 14px\n  height: '2.5rem',\n  marginLeft: '1rem',\n  marginRight: '1rem',\n  width: '90%'\n});\nexport const copyIconStyle = mergeStyles({\n  marginRight: '0.5em'\n});\nexport const settingsContainerStyle = mergeStyles({\n  marginLeft: '1.25rem',\n  width: '15.375rem'\n});\n","import React from \"react\"\nimport { Stack, Icon, PrimaryButton, TextField, Separator } from '@fluentui/react';\nimport { paneFooterStyles, paneFooterTokens, footerMainTextStyle, textFieldStyles, copyLinkButtonStyle, copyIconStyle } from \"./styles/CommandPanel.styles\"\n\nconst invitePeopleString = 'Invite people to join';\nconst copyJoinInfoString = 'Copy join info';\n\nconst copyJoinLink = () => {\n    const inputElement = document.getElementById('inputText') as HTMLInputElement;\n    inputElement.select();\n    document.execCommand('copy');\n  };\n\nexport const Footer = () => {\n    return  <Stack styles={paneFooterStyles} tokens={paneFooterTokens}>\n    <Separator />\n    <div className={footerMainTextStyle}>{invitePeopleString}</div>\n    <TextField styles={textFieldStyles} id=\"inputText\" type=\"text\" value={`${document.baseURI}`}></TextField>\n    <PrimaryButton className={copyLinkButtonStyle} onClick={copyJoinLink}>\n      <Icon iconName=\"Copy\" className={copyIconStyle} />\n      {copyJoinInfoString}\n    </PrimaryButton>\n  </Stack>\n}","// © Microsoft Corporation. All rights reserved.\nimport React, { useEffect } from 'react';\nimport { Stack, Toggle, Image, ImageFit } from '@fluentui/react';\nimport { MicIcon, CallVideoIcon } from '@fluentui/react-icons-northstar';\nimport { Constants } from '../core/constants';\nimport {\n  VideoStreamRendererView,\n  VideoDeviceInfo,\n  AudioDeviceInfo,\n  LocalVideoStream,\n  VideoStreamRenderer\n} from '@azure/communication-calling';\nimport staticMediaSVG from '../assets/staticmedia.svg';\nimport {\n  toggleStyle,\n  imgStyles,\n  toggleButtonsBarToken,\n  localPreviewContainerStyle,\n  toggleButtonsBarStyle,\n  localPreviewStyle\n} from './styles/LocalPreview.styles';\n\nexport interface LocalPreviewProps {\n  setMic(mic: boolean): void;\n  mic: boolean;\n  setLocalVideoStream(device: LocalVideoStream | undefined): void;\n  videoDeviceInfo: VideoDeviceInfo;\n  audioDeviceInfo: AudioDeviceInfo;\n  videoDeviceList: VideoDeviceInfo[];\n  audioDeviceList: AudioDeviceInfo[];\n  localVideoStream: LocalVideoStream;\n}\n\nlet rendererView: VideoStreamRendererView | undefined;\n\nexport const LocalPreview = (props: LocalPreviewProps): JSX.Element => {\n  const imageProps = {\n    src: staticMediaSVG.toString(),\n    imageFit: ImageFit.cover,\n    maximizeFrame: true\n  };\n\n  const handleLocalVideoOnOff = (_ev: React.MouseEvent<HTMLElement>, checked = false): void => {\n    const stream = new LocalVideoStream(props.videoDeviceInfo);\n    props.setLocalVideoStream(checked ? stream : undefined);\n  };\n  const handleLocalMicOnOff = (_ev: React.MouseEvent<HTMLElement>, checked = false): void => {\n    props.setMic(checked);\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (props.localVideoStream) {\n        const renderer: VideoStreamRenderer = new VideoStreamRenderer(props.localVideoStream);\n        rendererView = await renderer.createView({ scalingMode: 'Crop' });\n\n        const container = document.getElementById(Constants.CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID);\n\n        if (container && container.childElementCount === 0) {\n          container.appendChild(rendererView.target);\n        }\n      }\n    })();\n\n    return () => {\n      if (rendererView) {\n        rendererView.dispose();\n        rendererView = undefined;\n      }\n    };\n  }, [props.localVideoStream]);\n  return (\n    <Stack className={localPreviewContainerStyle}>\n      <Stack\n        horizontalAlign=\"center\"\n        verticalAlign=\"center\"\n        id={Constants.CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID}\n        className={localPreviewStyle}\n      >\n        {!props.localVideoStream && <Image styles={imgStyles} {...imageProps} aria-label=\"Local video preview image\"/>}\n      </Stack>\n      <Stack\n        horizontal\n        horizontalAlign=\"center\"\n        verticalAlign=\"center\"\n        tokens={toggleButtonsBarToken}\n        className={toggleButtonsBarStyle}\n      >\n        <CallVideoIcon size=\"medium\" />\n        <Toggle\n          onKeyDownCapture={(e) => { e.preventDefault() }}\n          checked={props.localVideoStream !== undefined}\n          styles={toggleStyle}\n          disabled={!props.videoDeviceInfo || props.videoDeviceList.length === 0}\n          onChange={handleLocalVideoOnOff}\n          ariaLabel=\"Video Icon\"\n        />\n        <MicIcon size=\"medium\" />\n        <Toggle\n          checked={props.mic}\n          styles={toggleStyle} \n          disabled={!props.audioDeviceInfo || props.audioDeviceList.length === 0}\n          onChange={handleLocalMicOnOff} ariaLabel=\"Microphone Icon\"/>\n      </Stack>\n    </Stack>\n  );\n};\n","import { mergeStyles, IPivotStyles, getTheme } from '@fluentui/react';\n\nconst headerShadow = 'rgba(0, 0, 0, 0.133) 0px 1.6px 3.6px 0px, rgba(0, 0, 0, 0.11) 0px 0.3px 0.9px 0px';\nconst palette = getTheme().palette;\nexport const pivotItemStyles: Partial<IPivotStyles> = {\n  linkIsSelected: {\n    padding: 0,\n    marginRight: 0,\n    height: '100%',\n    color: palette.themePrimary,\n    selectors: {\n      ':hover': { color: palette.themePrimary }\n    }\n  },\n  link: { padding: 0, marginRight: 0, height: '3.75rem' },\n  root: { width: '5.25rem', height: '3.75rem', display: 'inline-block', verticalAlign: 'top' }\n};\nexport const pivotContainerStyle = mergeStyles({\n  display: 'inline-block'\n});\nexport const headerContainer = mergeStyles({\n  width: '100%',\n  height: '3.875rem',\n  padding: '0.0625rem 0',\n  boxShadow: headerShadow,\n  overflow: 'hidden',\n  flexDirection: 'row',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  marginBottom: 2\n});\nexport const headerCenteredContainer = mergeStyles(headerContainer, {\n  justifyContent: 'center'\n});\n\nexport const feedbackContainer = mergeStyles({\n  marginLeft: '1rem'\n});\n\nexport const recordingIcon = mergeStyles({\n  pointerEvents: 'none',\n  i: {\n    color: 'red'\n  }\n});\n\nexport const separatorContainerStyle = mergeStyles({\n  display: 'inline-block',\n  padding: '0 1rem',\n  height: '1.875rem'\n});\n\nexport const recordingSplitter = mergeStyles({\n  display: 'inline-flex',\n  height: '1.875rem'\n});\n\nexport const pivotItemStyle = mergeStyles({\n  padding: '0 0.8125rem'\n});\nexport const separatorStyles = {\n  root: {\n    color: palette.neutralLight,\n    width: '0.0625rem' // 1px\n  }\n};\n","import { getTheme, mergeStyles } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const IconColor = mergeStyles({\n  color: palette.neutralSecondary,\n  selectors: {\n    ':hover': { color: palette.blue }\n  }\n});\n\nexport const recordingItemStyle = mergeStyles({\n  paddingLeft: '0.8125rem'\n});\n\nexport const recordingIconStyle = mergeStyles({\n  color: 'red',\n  selectors: {\n    ':hover': { color: 'red' }\n  }\n});\n\nexport const recordingIconDivStyle = mergeStyles({\n  position: 'absolute',\n  left: '10px',\n  top: '16px'\n});\n\nexport const recordingTextDivStyle = mergeStyles({\n  position: 'relative',\n  left: '10px',\n  bottom: '5px',\n  fontSize: '90%'\n});\n","import { connect } from 'react-redux';\nimport { CallRecording, CallRecordingProps } from '../components/CallRecording';\nimport { State } from '../core/reducers';\nimport { startRecord, stopRecord } from '../core/sideEffects';\n\nconst mapStateToProps = (state: State) => ({\n  conversationId: state.calls.serverCallId,\n  recordingStatus: state.calls.recordingStatus\n});\n\nconst mapDispatchToProps = (dispatch: any, props: CallRecordingProps) => ({\n  startRecording: () => dispatch(startRecord()),\n  stopRecording: () => dispatch(stopRecord())\n});\n\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\nexport default connector(CallRecording);\n","// © Microsoft Corporation. All rights reserved.\nimport React from 'react';\nimport { IContextualMenuProps, ITooltipHostStyles, TooltipHost } from '@fluentui/react';\nimport { MoreIcon } from '@fluentui/react-icons-northstar';\nimport { ContextualMenu, IContextualMenuItem } from '@fluentui/react/lib/ContextualMenu';\nimport { fullWidth } from './styles/MediaControls.styles';\nimport { IconColor, recordingItemStyle } from './styles/CallRecording.styles';\n\nexport interface CallRecordingProps {\n  startRecording(): void;\n  stopRecording(): void;\n  recordingStatus: 'STARTED' | 'STOPPED';\n}\n\nexport const CallRecording = (props: CallRecordingProps): JSX.Element => {\n  const linkRef = React.useRef(null);\n  const [showContextualMenu, setShowContextualMenu] = React.useState(false);\n  const onShowContextualMenu = React.useCallback((ev: React.MouseEvent<HTMLElement>) => {\n    ev.preventDefault();\n    setShowContextualMenu(true);\n  }, []);\n  const onHideContextualMenu = React.useCallback(() => setShowContextualMenu(false), []);\n\n  const keys: string[] = ['startRecording', 'stopRecording'];\n  const recordingStatus = { props };\n  const onContextMenuItemClick = React.useCallback(\n    (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, item?: IContextualMenuItem): void => {\n      if (item?.key === 'startRecording') {\n        props.startRecording();\n      }\n      else {\n        props.stopRecording();\n      }\n    },\n    [recordingStatus]\n  );\n  const menuProps: IContextualMenuProps = React.useMemo(\n    () => ({\n      items: [\n        {\n          key: keys[0],\n          iconProps: {\n            iconName: 'CircleFill',\n            style: { color: 'crimson' }\n          },\n          text: 'Start recording',\n          disabled: props.recordingStatus === 'STARTED',\n          onClick: onContextMenuItemClick\n        },\n        {\n          key: keys[1],\n          iconProps: {\n            iconName: 'CircleStopSolid',\n            style: { color: 'indianred' }\n          },\n          text: 'Stop recording',\n          disabled: props.recordingStatus === 'STOPPED',\n          onClick: onContextMenuItemClick\n        }\n      ]\n    }),\n    [props.recordingStatus, onContextMenuItemClick, keys]\n  );\n\n  const calloutProps = { gapSpace: 0 };\n  const hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };\n  return (\n    <div>\n      {\n        <a ref={linkRef} className={IconColor} onClick={onShowContextualMenu} href=\"#\">\n          <div className={fullWidth}>\n            <TooltipHost content=\"More actions\" id=\"moreActions\" calloutProps={calloutProps} styles={hostStyles}>\n              <MoreIcon aria-describedby={'moreActions'} size=\"medium\" className={recordingItemStyle}/>\n            </TooltipHost>\n          </div>\n        </a>\n      }\n      <ContextualMenu\n        items={menuProps.items}\n        hidden={!showContextualMenu}\n        target={linkRef}\n        onItemClick={onHideContextualMenu}\n        onDismiss={onHideContextualMenu}\n        gapSpace={10}\n      />\n    </div>\n  );\n};\n","import { BlobServiceClient } from '@azure/storage-blob';\nimport { utils } from 'Utils/Utils';\nimport { Feedback } from './Feedback';\n\nconst getCanvasBlob = (canvas: HTMLCanvasElement): Promise<Blob | null> => {\n  return new Promise((resolve) => {\n    canvas.toBlob((blob) => {\n      resolve(blob);\n    }, 'image/png');\n  });\n};\n\nexport const uploadFeedback = async (\n  feedback: Feedback,\n  screenShotCanvas: HTMLCanvasElement | undefined\n): Promise<void> => {\n  try {\n    const settings = await utils.getFeedbackSettings();\n\n    const blobServiceClient = new BlobServiceClient(settings.sasUri);\n    const containerClient = blobServiceClient.getContainerClient(settings.containerName);\n    const blockBlobClient = containerClient.getBlockBlobClient(`logs-${feedback.feedbackId}.json`);\n    const serializedFeedback = JSON.stringify(feedback, null, 4);\n    const logPromise = blockBlobClient.upload(serializedFeedback, serializedFeedback.length);\n    let screenShotPromise = undefined;\n    if (screenShotCanvas) {\n      const blockBlobClient = containerClient.getBlockBlobClient(`screenShot-${feedback.feedbackId}.png`);\n      const screenShotBlob = await getCanvasBlob(screenShotCanvas);\n      if (screenShotBlob != null) {\n        screenShotPromise = blockBlobClient.uploadData(screenShotBlob);\n      }\n    }\n    await Promise.all([logPromise, screenShotPromise]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","declare class ImageCapture {\n  constructor(track: MediaStreamTrack);\n  grabFrame: () => Promise<ImageBitmap>;\n}\n\ndeclare class MediaDevicesWithDisplayMedia extends MediaDevices {\n  getDisplayMedia: (constraints?: MediaStreamConstraints | undefined) => Promise<MediaStream>;\n}\n\nexport const captureScreenshot = async (): Promise<HTMLCanvasElement> => {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  const captureStream = await (navigator.mediaDevices as MediaDevicesWithDisplayMedia).getDisplayMedia({\n    video: true\n  });\n  const track = captureStream.getVideoTracks()[0];\n  const capture = new ImageCapture(track);\n  const bitmap = await capture.grabFrame();\n  canvas.width = bitmap.width;\n  canvas.height = bitmap.height;\n  track.stop();\n  context?.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height);\n  captureStream.getTracks().forEach((track): void => track.stop());\n  return canvas;\n};\n\nexport const isScreenShotAvailable = (): boolean => {\n  return (\n    !!(window?.navigator?.mediaDevices as MediaDevicesWithDisplayMedia)?.getDisplayMedia &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    !!(window as any).ImageCapture\n  );\n};\n","import { Reducer } from 'redux';\nimport { AudioDeviceInfo, VideoDeviceInfo, DeviceManager } from '@azure/communication-calling';\nimport {\n  SET_DEVICE_MANAGER,\n  SET_AUDIO_DEVICE_INFO,\n  SET_AUDIO_DEVICE_LIST,\n  SET_CAMERA_PERMISSION,\n  SET_MICROPHONE_PERMISSION,\n  SET_VIDEO_DEVICE_INFO,\n  SET_VIDEO_DEVICE_LIST,\n  DeviceTypes\n} from '../actions/devices';\n\nexport interface DevicesState {\n  deviceManager?: DeviceManager;\n  audioDeviceInfo?: AudioDeviceInfo;\n  videoDeviceInfo?: VideoDeviceInfo;\n  audioDeviceList: AudioDeviceInfo[];\n  videoDeviceList: VideoDeviceInfo[];\n  cameraPermission?: string;\n  microphonePermission?: string;\n}\n\nconst initialState: DevicesState = {\n  deviceManager: undefined,\n  audioDeviceInfo: undefined,\n  videoDeviceInfo: undefined,\n  audioDeviceList: [],\n  videoDeviceList: [],\n  cameraPermission: undefined,\n  microphonePermission: undefined\n};\n\nexport const devicesReducer: Reducer<DevicesState, DeviceTypes> = (\n  state = initialState,\n  action: DeviceTypes\n): DevicesState => {\n  switch (action.type) {\n    case SET_DEVICE_MANAGER:\n      return { ...state, deviceManager: action.deviceManager };\n    case SET_VIDEO_DEVICE_INFO:\n      return { ...state, videoDeviceInfo: action.videoDeviceInfo };\n    case SET_AUDIO_DEVICE_INFO:\n      return { ...state, audioDeviceInfo: action.audioDeviceInfo };\n    case SET_VIDEO_DEVICE_LIST:\n      return { ...state, videoDeviceList: action.videoDeviceList };\n    case SET_AUDIO_DEVICE_LIST:\n      return { ...state, audioDeviceList: action.audioDeviceList };\n    case SET_CAMERA_PERMISSION:\n      return { ...state, cameraPermission: action.cameraPermission };\n    case SET_MICROPHONE_PERMISSION:\n      return { ...state, microphonePermission: action.microphonePermission };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\nimport { LocalVideoStream } from '@azure/communication-calling';\nimport { ParticipantStream } from './index';\nimport {\n  SET_LOCAL_VIDEO_STREAM,\n  ADD_SCREENSHARE_STREAM,\n  StreamTypes,\n  REMOVE_SCREENSHARE_STREAM\n} from '../actions/streams';\nimport { DeviceTypes, SET_VIDEO_DEVICE_INFO } from '../actions/devices';\n\nexport interface StreamsState {\n  screenShareStreams: ParticipantStream[];\n  localVideoRendererIsBusy: boolean;\n  localVideoStream?: LocalVideoStream;\n}\n\nconst initialState: StreamsState = {\n  localVideoRendererIsBusy: false,\n  localVideoStream: undefined,\n  screenShareStreams: []\n};\n\nexport const streamsReducer: Reducer<StreamsState, StreamTypes | DeviceTypes> = (\n  state = initialState,\n  action: StreamTypes | DeviceTypes\n): StreamsState => {\n  switch (action.type) {\n    case SET_VIDEO_DEVICE_INFO:\n      if (state.localVideoStream && action.videoDeviceInfo) {\n        return { ...state, localVideoStream: new LocalVideoStream(action.videoDeviceInfo) };\n      }\n      return state;\n    case SET_LOCAL_VIDEO_STREAM:\n      return { ...state, localVideoStream: action.localVideoStream };\n    case ADD_SCREENSHARE_STREAM:\n      const newScreenShareStream: ParticipantStream = { stream: action.stream, user: action.user };\n      return { ...state, screenShareStreams: [...state.screenShareStreams, newScreenShareStream] };\n    case REMOVE_SCREENSHARE_STREAM:\n      const screenShareStreams = state.screenShareStreams.filter(\n        (stream) => stream.stream !== action.stream && stream.user !== action.user\n      );\n      return { ...state, screenShareStreams };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\nimport { SET_MIC, SET_SHARE_SCREEN, ControlTypes } from '../actions/controls';\n\nexport interface ControlsState {\n  mic: boolean;\n  localVideo: boolean;\n  shareScreen: boolean;\n}\n\nconst initialState: ControlsState = {\n  mic: false,\n  localVideo: false,\n  shareScreen: false\n};\n\nexport const controlsReducer: Reducer<ControlsState, ControlTypes> = (\n  state = initialState,\n  action: ControlTypes\n): ControlsState => {\n  switch (action.type) {\n    case SET_MIC:\n      return { ...state, mic: action.mic };\n    case SET_SHARE_SCREEN:\n      return { ...state, shareScreen: action.shareScreen };\n    default:\n      return state;\n  }\n};\n","import { CallClient } from '@azure/communication-calling';\nimport { Reducer } from 'redux';\nimport { SET_USERID, SdkTypes, SET_CALL_CLIENT, SET_DISPLAY_NAME } from '../actions/sdk';\n\nexport interface SdkState {\n  userId?: string;\n  callClient?: CallClient;\n  displayName: string;\n}\n\nconst initialState: SdkState = {\n  displayName: ''\n};\n\nexport const sdkReducer: Reducer<SdkState, SdkTypes> = (state = initialState, action: SdkTypes): SdkState => {\n  switch (action.type) {\n    case SET_USERID:\n      return { ...state, userId: action.userId };\n    case SET_CALL_CLIENT:\n      return { ...state, callClient: action.callClient };\n    case SET_DISPLAY_NAME:\n      return { ...state, displayName: action.displayName };\n    default:\n      return state;\n  }\n};\n","import { Call, CallEndReason, RemoteParticipant, CallAgent } from '@azure/communication-calling';\nimport { SelectionState } from 'core/RemoteStreamSelector';\nimport { Reducer } from 'redux';\nimport {\n  CALL_ADDED,\n  CALL_REMOVED,\n  SET_CALL_STATE,\n  SET_DOMINANT_PARTICIPANTS,\n  SET_PARTICIPANTS,\n  CallTypes,\n  SET_CALL_AGENT,\n  SET_RECORDING_ACTIVE,\n  SET_TRANSCRIBING_ACTIVE,\n  START_RECORDING,\n  STOP_RECORDING,\n  SET_SERVER_CALL_ID,\n  DIALOGBOX_VISIBLE,\n  RECORDING_ERROR\n} from '../actions/calls';\n\nexport interface CallsState {\n  callAgent?: CallAgent;\n  call?: Call;\n  callState: string;\n  incomingCallEndReason: CallEndReason | undefined;\n  callEndReason: CallEndReason | undefined;\n  remoteParticipants: RemoteParticipant[];\n  attempts: number;\n  isBeingRecorded: boolean | undefined;\n  isBeingTranscribed: boolean | undefined;\n  dominantParticipants: SelectionState[];\n  serverCallId: string;\n  recordingStatus: 'STARTED' | 'STOPPED';\n  recordingError: string;\n  dialogBoxVisible: boolean;\n}\n\nconst initialState: CallsState = {\n  callAgent: undefined,\n  call: undefined,\n  callState: 'None',\n  incomingCallEndReason: undefined,\n  callEndReason: undefined,\n  remoteParticipants: [],\n  attempts: 0,\n  isBeingRecorded: undefined,\n  isBeingTranscribed: undefined,\n  dominantParticipants: [],\n  serverCallId: '',\n  recordingStatus: 'STOPPED',\n  dialogBoxVisible: false,\n  recordingError: ''\n};\n\nexport const callsReducer: Reducer<CallsState, CallTypes> = (state = initialState, action: CallTypes): CallsState => {\n  switch (action.type) {\n    case SET_CALL_AGENT:\n      return { ...state, callAgent: action.callAgent };\n    case CALL_ADDED:\n      return { ...state, call: action.call };\n    case CALL_REMOVED:\n      return {\n        ...state,\n        call: undefined,\n        remoteParticipants: [],\n        incomingCallEndReason: action.incomingCallEndReason,\n        callEndReason: action.callEndReason,\n        serverCallId: '',\n        recordingStatus: 'STOPPED'\n      };\n    case SET_CALL_STATE:\n      return { ...state, callState: action.callState };\n    case SET_DOMINANT_PARTICIPANTS:\n      return { ...state, dominantParticipants: action.dominantParticipants };\n    case SET_PARTICIPANTS:\n      return { ...state, remoteParticipants: action.remoteParticipants };\n    case SET_RECORDING_ACTIVE:\n      return { ...state, isBeingRecorded: action.active };\n    case SET_TRANSCRIBING_ACTIVE:\n      return { ...state, isBeingTranscribed: action.active };\n    case START_RECORDING:\n      return { ...state, recordingStatus: action.status };\n    case STOP_RECORDING:\n      return { ...state, recordingStatus: action.status };\n    case SET_SERVER_CALL_ID:\n      return { ...state, serverCallId: action.serverCallId };\n    case DIALOGBOX_VISIBLE:\n      return { ...state, dialogBoxVisible: action.dialogBoxVisible };\n    case RECORDING_ERROR:\n      return { ...state, recordingError: action.recordingError, dialogBoxVisible: true };\n    default:\n      return state;\n  }\n};\n","import { RemoteParticipant, RemoteVideoStream } from '@azure/communication-calling';\nimport { combineReducers, Reducer } from 'redux';\nimport { devicesReducer, DevicesState } from '../reducers/devices';\nimport { streamsReducer, StreamsState } from './streams';\nimport { controlsReducer, ControlsState } from './controls';\nimport { SdkState, sdkReducer } from './sdk';\nimport { CallsState, callsReducer } from './calls';\nimport { CallTypes } from '../actions/calls';\nimport { ControlTypes } from '../actions/controls';\nimport { DeviceTypes } from '../actions/devices';\nimport { SdkTypes } from '../actions/sdk';\nimport { StreamTypes } from '../actions/streams';\n\nexport interface ParticipantStream {\n  user: RemoteParticipant;\n  stream: RemoteVideoStream | undefined;\n}\n\nexport interface State {\n  calls: CallsState;\n  devices: DevicesState;\n  streams: StreamsState;\n  controls: ControlsState;\n  sdk: SdkState;\n}\n\ntype AppTypes = CallTypes | ControlTypes | DeviceTypes | SdkTypes | StreamTypes;\n\nexport const reducer: Reducer<State, AppTypes> = combineReducers({\n  calls: callsReducer,\n  devices: devicesReducer,\n  streams: streamsReducer,\n  controls: controlsReducer,\n  sdk: sdkReducer\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './reducers';\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import { AzureLogger } from '@azure/logger'; // redirect log output\n\nconst logs: string[] = [];\n\nexport const initLogger = (): void => {\n  AzureLogger.log = (...args): void => {\n    logs.push(...args);\n  };\n};\n\nexport const getLogs = (): string[] => {\n  return logs;\n};\n","import { store } from 'core/store';\nimport { Feedback } from 'feedbacks/Feedback';\nimport { getLogs } from 'feedbacks/logger';\nimport { v1 as createGUID } from 'uuid';\n\nexport const createFeedback = (feedbackType: string, comment: string): Feedback => {\n  const callId = store.getState().calls.call?.id ?? 'Not Found';\n  return {\n    logs: getLogs(),\n    callId: callId,\n    comments: comment,\n    feedbackId: createGUID(),\n    type: feedbackType\n  };\n};\n","import {\n  Checkbox,\n  CommandButton,\n  DefaultButton,\n  Dialog,\n  DialogFooter,\n  DialogType,\n  Dropdown,\n  IDropdownOption,\n  Label,\n  PrimaryButton,\n  TextField\n} from '@fluentui/react';\nimport { uploadFeedback } from 'feedbacks/submitFeedback';\nimport React, { useCallback, useState } from 'react';\nimport { isScreenShotAvailable, captureScreenshot } from 'Utils/captureScreenshot';\nimport { createFeedback } from 'Utils/createFeedback';\n\ntype FeedbackButtonProps = {\n  iconOnly?: boolean;\n}\n\nexport const FeedbackButton = ({ iconOnly }: FeedbackButtonProps): JSX.Element => {\n  const [hidden, setHidden] = useState(true);\n  const togglePopup = useCallback(() => {\n    setHidden(!hidden);\n  }, [hidden]);\n\n  return (\n    <>\n      <CommandButton\n        key='Feedback'\n        text={iconOnly ? undefined : 'Report a bug'}\n        ariaLabel={iconOnly ? 'Report a bug': undefined}\n        iconProps={{ iconName: 'Feedback' }}\n        onClick={togglePopup}\n      />\n      {!hidden && <FeedbackPopup toggleHidden={togglePopup} />}\n    </>\n  );\n};\n\ntype FeedbackPopupProps = {\n  toggleHidden: () => void;\n};\n\nconst options: IDropdownOption[] = [\n  { key: 'Calling - Audio', text: 'Calling - Audio' },\n  { key: 'Calling - Call drops', text: 'Calling - Call drops' },\n  { key: 'Calling - Other', text: 'Calling - Other' },\n  { key: 'Calling - Video', text: 'Calling - Video' },\n  { key: 'Calling - Screen sharing', text: 'Calling - Screen sharing' },\n  { key: 'Participants list', text: 'Participants list' },\n  { key: 'Join experience', text: 'Join experience' },\n  { key: 'App Crashing', text: 'App Crashing' },\n  { key: 'Others', text: 'Others' }\n];\n\nconst modalProps = {\n  isBlocking: false,\n  styles: { main: { maxWidth: 650, minWidth: 450 } }\n};\n\nconst screenShotStyle = {\n  width: '16.75rem',\n  objectFit: 'cover' as const\n};\n\nconst dialogContentProps = {\n  type: DialogType.largeHeader,\n  title: 'Feedback',\n  subText: 'Something went wrong? Please provide feedback here!'\n};\n\nconst FeedbackPopup = (props: FeedbackPopupProps): JSX.Element => {\n  const [feedbackType, setFeedbackType] = useState<string>('');\n  const [comment, setComment] = useState<string>('');\n  const [guid, setGuid] = useState<string>('');\n  const [isScreenShotDialogOn, setIsScreenShotDialogOn] = useState<boolean>(false);\n  const [screenShot, setScreenShot] = useState<HTMLCanvasElement>();\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n\n  const takeScreenShot = useCallback(async () => {\n    const screenShot = await captureScreenshot();\n    setScreenShot(screenShot);\n  }, []);\n\n  const submitFeedback = useCallback(async () => {\n    const feedback = createFeedback(feedbackType, comment);\n    await uploadFeedback(feedback, screenShot);\n    setGuid(feedback.feedbackId);\n  }, [feedbackType, comment, screenShot]);\n\n  const feedbackInput = (\n    <>\n      <Label>What is this related to? (Required)</Label>\n      <Dropdown\n        defaultSelectedKey={'Calling - Audio'}\n        options={options}\n        onChange={(_, item): void => {\n          setFeedbackType(item?.key as string);\n        }}\n      />\n      <Label>What are you seeing? Has it always been that way? Any step to repro?</Label>\n      <TextField\n        onChange={(_, value): void => {\n          setComment(value ?? '');\n        }}\n        value={comment}\n        multiline\n        rows={6}\n      />\n      <Checkbox\n        label=\"Include screen shot\"\n        checked={!!screenShot}\n        onChange={(_, value): void => (value ? setIsScreenShotDialogOn(value ?? false) : setScreenShot(undefined))}\n      />\n      {isScreenShotDialogOn && (\n        <ScreenShotInstruction\n          onDismiss={(): void => {\n            setIsScreenShotDialogOn(false);\n          }}\n          onTakeScreenShot={takeScreenShot}\n          setIsParentHidden={setIsHidden}\n        />\n      )}\n      {screenShot && <img src={screenShot?.toDataURL()} style={screenShotStyle} alt='screen shot' />}\n    </>\n  );\n\n  const feedbackSubmitted = (\n    <>\n      <Label>Please provide this guid to developers for targeting the case:</Label>\n      <TextField value={guid} readOnly />\n    </>\n  );\n\n  return (\n    <Dialog\n      dialogContentProps={dialogContentProps}\n      modalProps={modalProps}\n      hidden={isHidden}\n      onDismiss={props.toggleHidden}\n    >\n      {!guid && feedbackInput}\n      {guid && feedbackSubmitted}\n      <DialogFooter>\n        {!guid && <PrimaryButton onClick={submitFeedback} text=\"Send\" />}\n        <DefaultButton onClick={props.toggleHidden} text=\"Close\" />\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst screenShotDialogContentProps = {\n  type: DialogType.largeHeader,\n  title: 'Take a screen shot',\n  subText: isScreenShotAvailable()\n    ? 'Ready to take a screen shot? Please click [Microsoft Edge tab]/[Chrome tab] in next popup and choose the current tab!'\n    : 'Sorry, screen shot is not available for your browser.'\n};\n\ntype ScreenShotPopupProps = {\n  onTakeScreenShot: () => Promise<void>;\n  onDismiss: () => void;\n  setIsParentHidden: (value: boolean) => void;\n};\n\nconst ScreenShotInstruction = ({ onTakeScreenShot, onDismiss, setIsParentHidden }: ScreenShotPopupProps): JSX.Element => {\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n  const takeScreenShot = async (): Promise<void> => {\n    setIsParentHidden(true);\n    setIsHidden(true);\n    try {\n      await onTakeScreenShot();\n    } catch { }\n\n    setIsParentHidden(false);\n    onDismiss();\n  };\n  return (\n    <Dialog\n      dialogContentProps={screenShotDialogContentProps}\n      modalProps={modalProps}\n      hidden={isHidden}\n      onDismiss={onDismiss}\n    >\n      <DialogFooter>\n        {isScreenShotAvailable() && <PrimaryButton onClick={takeScreenShot} text=\"I am ready!\" />}\n        <DefaultButton onClick={onDismiss} text=\"Never mind\" />\n      </DialogFooter>\n    </Dialog>\n  );\n};\n","import { connect } from 'react-redux';\nimport { Header, HeaderProps } from '../components/Header';\nimport { setMicrophone, setShareUnshareScreen, endCall } from '../core/sideEffects';\nimport { utils } from '../Utils/Utils';\nimport { Constants } from '../core/constants';\nimport { State } from '../core/reducers';\nimport { LocalVideoStream } from '@azure/communication-calling';\nimport { setLocalVideoStream } from '../core/actions/streams';\n\nconst mapStateToProps = (state: State, props: HeaderProps) => ({\n  actionable:\n    state.calls.callState === Constants.INCOMING ||\n    state.calls.callState === Constants.RINGING ||\n    state.calls.callState === Constants.CONNECTING ||\n    state.calls.callState === Constants.CONNECTED,\n  localVideoStream: state.streams.localVideoStream,\n  mic: state.controls.mic,\n  call: state.calls.call,\n  shareScreen: state.controls.shareScreen,\n  endCall: () => {\n    state.calls.call && endCall(state.calls.call, { forEveryone: false });\n    props.endCallHandler();\n  },\n  videoDeviceInfo: state.devices.videoDeviceInfo,\n  screenWidth: props.screenWidth,\n  screenShareStreams: state.streams.screenShareStreams,\n  localVideoRendererIsBusy: state.streams.localVideoRendererIsBusy,\n  cameraPermission: state.devices.cameraPermission,\n  microphonePermission: state.devices.microphonePermission,\n  recordingStatus: state.calls.recordingStatus\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  setLocalVideoStream: (localVideoStream: LocalVideoStream) => dispatch(setLocalVideoStream(localVideoStream)),\n  setMic: (mic: boolean) => dispatch(setMicrophone(mic)),\n  setScreenShare: (screenShare: boolean) => dispatch(setShareUnshareScreen(screenShare)),\n  // Only support Desktop -- Chrome | Edge (Chromium) | Safari\n  isLocalScreenShareSupportedInBrowser: () => {\n    return (\n      !utils.isMobileSession() &&\n      (/chrome/i.test(navigator.userAgent.toLowerCase()) || /safari/i.test(navigator.userAgent.toLowerCase()))\n    );\n  }\n});\n\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\nexport default connector(Header);\n","// © Microsoft Corporation. All rights reserved.\nimport React, { useEffect, useState } from 'react';\nimport { Separator, Pivot, PivotItem, Stack, CommandButton } from '@fluentui/react';\nimport { Call, LocalVideoStream, VideoDeviceInfo } from '@azure/communication-calling';\nimport { MediaControls } from './MediaControls';\nimport { CommandPanelTypes } from './CommandPanel';\nimport { UserFriendsIcon, SettingsIcon } from '@fluentui/react-icons-northstar';\nimport { Constants } from 'core/constants';\nimport {\n  headerContainer,\n  pivotItemStyles,\n  separatorContainerStyle,\n  separatorStyles,\n  pivotItemStyle,\n  headerCenteredContainer,\n  feedbackContainer,\n  recordingIcon,\n  recordingSplitter\n} from './styles/Header.styles';\nimport { ParticipantStream } from 'core/reducers';\nimport CallRecording from '../containers/CallRecording';\nimport { FeedbackButton } from './FeedbackButton';\nimport { utils } from 'Utils/Utils';\n\nexport interface HeaderProps {\n  selectedPane: CommandPanelTypes;\n  setSelectedPane: any;\n  endCallHandler(): void;\n  actionable: boolean;\n  localVideo: boolean;\n  mic: boolean;\n  shareScreen: boolean;\n  call: Call;\n  endCall(): void;\n  screenShareStreams: ParticipantStream[];\n  activeScreenShareStream: ParticipantStream | undefined;\n  localVideoRendererIsBusy: boolean;\n  cameraPermission: string;\n  microphonePermission: string;\n  screenWidth: number;\n  setMic(mic: boolean): void;\n  setLocalVideoStream(localVideoStream: LocalVideoStream | undefined): void;\n  setScreenShare(screenShare: boolean): void;\n  isLocalScreenShareSupportedInBrowser(): boolean;\n  localVideoStream: LocalVideoStream | undefined;\n  videoDeviceInfo: VideoDeviceInfo | undefined;\n  recordingStatus: 'STARTED' | 'STOPPED';\n}\n\nexport const Header = (props: HeaderProps): JSX.Element => {\n  const [isFeedbackEnabled, setIsFeedbackEnabled] = useState(false);\n  const [isRecordingEnabled, setIsRecordingEnabled] = useState(false);\n  const compressedMode = props.screenWidth <= Constants.MINI_HEADER_WINDOW_WIDTH;\n  const isRecordingOn = props.recordingStatus === 'STARTED';\n\n  useEffect(() => {\n    (async () => {\n      const settings = await utils.getFeedbackSettings();\n      setIsFeedbackEnabled(settings.isFeedbackEnabled);\n\n      const recordingSettings = await utils.getRecordingSettings();\n      setIsRecordingEnabled(recordingSettings.isRecordingEnabled);\n    })();\n  }, [])\n\n  const togglePeople = (selectedPane: string, setSelectedPane: (pane: string) => void) => {\n    return selectedPane !== CommandPanelTypes.People\n      ? setSelectedPane(CommandPanelTypes.People)\n      : setSelectedPane(CommandPanelTypes.None);\n  };\n\n  const toggleOptions = (selectedPane: string, setSelectedPane: (pane: string) => void) => {\n    return selectedPane !== CommandPanelTypes.Settings\n      ? setSelectedPane(CommandPanelTypes.Settings)\n      : setSelectedPane(CommandPanelTypes.None);\n  };\n\n  const handleLocalVideoOnOff = async () => {\n    if (props.localVideoStream) {\n      await props.call.stopVideo(props.localVideoStream);\n      props.setLocalVideoStream(undefined);\n    } else {\n      if (props.videoDeviceInfo) {\n        const localVideoStream = new LocalVideoStream(props.videoDeviceInfo);\n        props.setLocalVideoStream(localVideoStream);\n        await props.call.startVideo(localVideoStream);\n      }\n    }\n  };\n\n  const handleMuteOnOff = () => {\n    props.setMic(!props.mic);\n  };\n\n  const handleScreenSharingOnOff = () => {\n    props.setScreenShare(!props.shareScreen);\n  };\n\n  useEffect(() => {\n    if (props.call && props.call.localVideoStreams.length === 0 && props.localVideoStream) {\n      props.call.startVideo(props.localVideoStream);\n    }\n  }, [props.call, props.localVideoStream]);\n\n  return (\n    <Stack\n      id=\"header\"\n      className={props.screenWidth > Constants.MINI_HEADER_WINDOW_WIDTH ? headerContainer : headerCenteredContainer}\n    >\n      <Stack.Item grow={1} className={feedbackContainer}>\n        {isFeedbackEnabled && <FeedbackButton iconOnly={compressedMode} />}\n        {isFeedbackEnabled && isRecordingOn && <div className={recordingSplitter}>\n          <Separator styles={separatorStyles} vertical={true} />\n        </div>}\n        {isRecordingOn &&\n          <CommandButton\n            className={recordingIcon}\n            key='RadioBtnOn'\n            text={compressedMode ? undefined : 'Recording'}\n            ariaLabel={compressedMode ? 'Recording' : undefined}\n            iconProps={{ iconName: 'RadioBtnOn' }}\n          />}\n      </Stack.Item>\n\n      <Pivot\n        onKeyDownCapture={(e) => {\n          if ((e.target as HTMLElement).id === CommandPanelTypes.People && e.keyCode === 39) e.preventDefault();\n        }}\n        getTabId={(itemKey: string) => itemKey}\n        onLinkClick={(item) => {\n          if (!item) return;\n          if (item.props.itemKey === CommandPanelTypes.Settings)\n            toggleOptions(props.selectedPane, props.setSelectedPane);\n          if (item.props.itemKey === CommandPanelTypes.People) togglePeople(props.selectedPane, props.setSelectedPane);\n        }}\n        styles={pivotItemStyles}\n        initialSelectedKey={CommandPanelTypes.None}\n        selectedKey={props.selectedPane}\n      >\n        <PivotItem\n          itemKey={CommandPanelTypes.Settings}\n          onRenderItemLink={() => (\n            <SettingsIcon\n              outline={props.selectedPane === CommandPanelTypes.Settings ? false : true}\n              size=\"medium\"\n              className={pivotItemStyle}\n            />\n          )}\n        />\n        <PivotItem\n          itemKey={CommandPanelTypes.People}\n          onRenderItemLink={() => (\n            <UserFriendsIcon\n              outline={props.selectedPane === CommandPanelTypes.People ? false : true}\n              size=\"medium\"\n              className={pivotItemStyle}\n            />\n          )}\n        />\n        <PivotItem itemKey={CommandPanelTypes.None} />\n      </Pivot>\n      {isRecordingEnabled && <Stack>\n        <CallRecording />\n      </Stack>}\n      {props.screenWidth > Constants.MINI_HEADER_WINDOW_WIDTH && (\n        <div className={separatorContainerStyle}>\n          <Separator styles={separatorStyles} vertical={true} />\n        </div>\n      )}\n      <MediaControls\n        micActive={props.mic}\n        onMicChange={handleMuteOnOff}\n        cameraActive={props.localVideoStream !== undefined}\n        onCameraChange={handleLocalVideoOnOff}\n        screenShareActive={props.shareScreen}\n        activeScreenShareStream={props.screenShareStreams[0] ?? undefined}\n        onScreenShareChange={handleScreenSharingOnOff}\n        onEndCallClick={() => {\n          if (props.localVideo) handleLocalVideoOnOff();\n          props.endCall();\n        }}\n        cameraPermission={props.cameraPermission}\n        microphonePermission={props.microphonePermission}\n        localVideoRendererIsBusy={props.localVideoRendererIsBusy}\n        compressedMode={compressedMode}\n        isLocalScreenShareSupportedInBrowser={props.isLocalScreenShareSupportedInBrowser}\n      />\n    </Stack>\n  );\n};\n","import { mergeStyles, getTheme } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const mediaGalleryStyle = mergeStyles({\n  padding: '0.4375rem',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  border: 0,\n  borderRight: '1px solid rgba(0,0,0,0.05)',\n  borderBottom: '1px solid rgba(0,0,0,0.05)'\n});\nexport const mediaGalleryGridStyle = mergeStyles({\n  height: '100%',\n  background: palette.neutralLighterAlt,\n  display: 'grid',\n  overflow: 'hidden'\n});\n\nexport const substageMediaGalleryStyle = mergeStyles({\n  padding: '0.4375rem',\n  width: '100px',\n  minWidth: '100px',\n  height: '100px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  border: 0,\n  borderRight: '1px solid rgba(0,0,0,0.05)',\n  borderBottom: '1px solid rgba(0,0,0,0.05)'\n});\n\nexport const mediaGallerySubstageStyle = mergeStyles({\n  height: '8.438rem',\n  overflowX: 'auto',\n  overflowY: 'hidden'\n});\n","import { mergeStyles, getTheme } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const videoHint = mergeStyles({\n  backgroundColor: palette.neutralSecondary,\n  bottom: '5%',\n  height: '1.75rem',\n  boxShadow: '0 0 1px 0 rgba(0,0,0,.16)',\n  color: palette.neutralLighter,\n  fontSize: '1.25rem',\n  lineHeight: '1.0625rem',\n  textAlign: 'left',\n  left: '2%',\n  overflow: 'hidden',\n  position: 'absolute',\n  padding: '0.25rem',\n  whiteSpace: 'nowrap',\n  maxWidth: '95%',\n  borderRadius: 4,\n  textOverflow: 'ellipsis'\n});\nexport const mediaContainer = mergeStyles({\n  position: 'relative',\n  height: '100%',\n  width: '100%',\n  background: 'transparent'\n});\nexport const localVideoContainerStyle = mergeStyles(mediaContainer, {\n  width: '100%',\n  height: '100%'\n});\n","// © Microsoft Corporation. All rights reserved.\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Image, ImageFit, Label } from '@fluentui/react';\nimport { LocalVideoStream, VideoStreamRenderer, VideoStreamRendererView } from '@azure/communication-calling';\nimport { videoHint, mediaContainer, localVideoContainerStyle } from './styles/StreamMedia.styles';\nimport { Constants } from '../core/constants';\nimport staticMediaSVG from '../assets/staticmedia.svg';\n\nexport interface LocalStreamMediaProps {\n  label: string;\n  stream: LocalVideoStream;\n}\n\nexport const LocalStreamMedia = (props: LocalStreamMediaProps): JSX.Element => {\n  const rendererView = useRef<undefined | VideoStreamRendererView>();\n\n  const [activeStreamBeingRendered, setActiveStreamBeingRendered] = useState(false);\n\n  const imageProps = {\n    src: staticMediaSVG.toString(),\n    imageFit: ImageFit.contain,\n    styles: {\n      root: {\n        width: '100%',\n        height: '100%',\n        display: activeStreamBeingRendered ? 'none' : 'block'\n      }\n    }\n  };\n\n  const { stream, label } = props;\n\n  useEffect(() => {\n    (async () => {\n      if (stream) {\n        const renderer: VideoStreamRenderer = new VideoStreamRenderer(stream);\n        rendererView.current = await renderer.createView({ scalingMode: 'Crop', isMirrored: true  });\n\n        const container = document.getElementById(Constants.LOCAL_VIDEO_PREVIEW_ID);\n\n        if (container && container.childElementCount === 0) {\n          container.appendChild(rendererView.current.target);\n          setActiveStreamBeingRendered(true);\n        }\n      } else {\n        if (rendererView.current) {\n          rendererView.current.dispose();\n          setActiveStreamBeingRendered(false);\n        }\n      }\n    })();\n\n    return () => {\n      if (rendererView.current) {\n        rendererView.current.dispose();\n        rendererView.current = undefined;\n        setActiveStreamBeingRendered(false);\n      }\n    };\n  }, [stream]);\n\n  return (\n    <div className={mediaContainer}>\n      <div\n        style={{ display: activeStreamBeingRendered ? 'block' : 'none' }}\n        className={localVideoContainerStyle}\n        id={Constants.LOCAL_VIDEO_PREVIEW_ID}\n      />\n      <Image {...imageProps}/>\n      <Label className={videoHint}>{label}</Label>\n    </div>\n  );\n};\n","// © Microsoft Corporation. All rights reserved.\n\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { Label, Spinner, SpinnerSize } from '@fluentui/react';\nimport { RemoteVideoStream, VideoStreamRenderer, VideoStreamRendererView } from '@azure/communication-calling';\nimport { videoHint, mediaContainer } from './styles/StreamMedia.styles';\nimport { utils } from 'Utils/Utils';\nimport staticMediaSVG from '../assets/staticmedia.svg';\nimport { Image, ImageFit } from '@fluentui/react';\n\nexport interface RemoteStreamMediaProps {\n  label: string;\n  stream: RemoteVideoStream | undefined;\n  isParticipantStreamSelected: boolean;\n}\n\nexport const RemoteStreamMedia = (props: RemoteStreamMediaProps): JSX.Element => {\n  const rendererView = useRef<VideoStreamRendererView | undefined>();\n\n  const streamId = props.stream ? utils.getStreamId(props.label, props.stream) : `${props.label} - no stream`;\n\n  const [activeStreamBeingRendered, setActiveStreamBeingRendered] = useState(false);\n  const [showRenderLoading, setShowRenderLoading] = useState(false);\n\n  const imageProps = {\n    src: staticMediaSVG.toString(),\n    imageFit: ImageFit.contain,\n    styles: {\n      root: {\n        width: '100%',\n        height: '100%',\n        display: activeStreamBeingRendered ? 'none' : 'block'\n      }\n    }\n  };\n\n    const imagePropsCard = {\n        src: staticMediaSVG.toString(),\n        imageFit: ImageFit.contain,\n        styles: {\n            root: {\n                width: '100%',\n                height: '100%',\n                display: activeStreamBeingRendered ? 'none' : 'block'\n            }\n        }\n    };\n\n  const loadingStyle = {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n\n  const {label, stream, isParticipantStreamSelected} = props;\n\n  const renderRemoteStream = useCallback(async () => {\n    const container = document.getElementById(streamId);\n    if (container && stream && stream.isAvailable && isParticipantStreamSelected) {\n      // if we are already rendering a stream we don't want to start rendering the same stream\n      if (activeStreamBeingRendered) {\n        return;\n      }\n\n      // set the flag that a stream is being rendered\n      setActiveStreamBeingRendered(true);\n      setShowRenderLoading(true);\n      const renderer: VideoStreamRenderer = new VideoStreamRenderer(stream);\n      // this can block a really long time if we fail to be subscribed to the call and it has to retry\n      rendererView.current = await renderer.createView({ scalingMode: 'Crop' });\n      setShowRenderLoading(false);\n      if (container && container.childElementCount === 0) {\n        container.appendChild(rendererView.current.target);\n      }\n    } else {\n      setActiveStreamBeingRendered(false);\n\n      if (rendererView.current) {\n        rendererView.current.dispose();\n        rendererView.current = undefined;\n      }\n    }\n  }, [stream, isParticipantStreamSelected, setShowRenderLoading, setActiveStreamBeingRendered, activeStreamBeingRendered, rendererView, streamId]);\n\n  useEffect(() => {\n    if (!stream) {\n      return;\n    }\n\n    stream.on('isAvailableChanged', renderRemoteStream);\n\n    if (stream.isAvailable) {\n      renderRemoteStream();\n    }\n  }, [stream, isParticipantStreamSelected, renderRemoteStream]);\n\n  return (\n    <div className={mediaContainer}>\n      <div style={{display: activeStreamBeingRendered ? 'block' : 'none' }} className={mediaContainer} id={streamId}>\n      { showRenderLoading && <Spinner style={loadingStyle} label={`Rendering stream...`} size={SpinnerSize.xSmall} />}\n      </div>\n        <Image {...imageProps}/>\n        <Label className={videoHint}>{label}</Label>\n    </div>\n  );\n};\n","import { connect } from 'react-redux';\nimport { MediaGallery } from '../components/MediaGallery';\nimport { State } from '../core/reducers';\n\nconst mapStateToProps = (state: State) => ({\n  userId: state.sdk.userId,\n  displayName: state.calls.callAgent?.displayName,\n  remoteParticipants: state.calls.remoteParticipants,\n  dominantParticipants: state.calls.dominantParticipants,\n  localVideoStream: state.streams.localVideoStream\n});\n\nconst connector: any = connect(mapStateToProps);\nexport default connector(MediaGallery);\n","import React, { useMemo, useState } from 'react';\nimport {\n  mediaGalleryGridStyle,\n  mediaGalleryStyle,\n  mediaGallerySubstageStyle,\n  substageMediaGalleryStyle\n} from './styles/MediaGallery.styles';\nimport { RemoteParticipant, LocalVideoStream } from '@azure/communication-calling';\nimport { utils } from '../Utils/Utils';\nimport { LocalStreamMedia } from './LocalStreamMedia';\nimport { RemoteStreamMedia } from './RemoteStreamMedia';\nimport { SelectionState } from 'core/RemoteStreamSelector';\nimport { Stack } from '@fluentui/react';\nimport { Constants } from '../core/constants';\n\nexport interface MediaGalleryProps {\n  userId: string;\n  displayName: string;\n  remoteParticipants: RemoteParticipant[];\n  localVideoStream: LocalVideoStream;\n  dominantParticipants: SelectionState[];\n}\n\nexport const MediaGallery = (props: MediaGalleryProps): JSX.Element => {\n  const [gridCol, setGridCol] = useState(1);\n  const [gridRow, setGridRow] = useState(1);\n\n\n  // For now we are only going to support up to a 4x3 grid or 10 participants in a call\n  // Since this is a sample, we will just hard-code how we want the grid to scale\n  // the rows and columns for the number of users in the call\n  const rows          = [1, 1, 2, 2, 2, 2, 3, 3, 3, 3];\n  const cols          = [1, 2, 2, 2, 3, 3, 3, 3, 3, 4];\n\n  if (Constants.DOMINANT_PARTICIPANTS_COUNT < 0 || Constants.DOMINANT_PARTICIPANTS_COUNT > rows.length) {\n    console.warn(`Please use a value for dominant participants between 0 < x < ${rows.length}`);\n  }\n\n  const numRemoteParticipantsToRender = Math.min(Constants.DOMINANT_PARTICIPANTS_COUNT, rows.length - 1);\n\n  const clamp = (num: number, min: number, max: number) => Math.min(Math.max(num, min), max);\n\n  const getMediaGalleryTilesForParticipants = (\n    participants: RemoteParticipant[],\n    displayName: string\n  ): JSX.Element[] => {\n    const remoteParticipantsMediaGalleryItems = participants.map((participant) => (\n      <div key={`${utils.getId(participant.identifier)}-tile`} className={mediaGalleryStyle}>\n        <RemoteStreamMedia\n          key={utils.getId(participant.identifier)}\n          stream={participant.videoStreams[0]}\n          isParticipantStreamSelected={\n            props.dominantParticipants.filter((p) => p.participantId === utils.getId(participant.identifier)).length > 0\n          }\n          label={participant.displayName ?? utils.getId(participant.identifier)}\n        />\n      </div>\n    ));\n\n    // for now we will always add the local user to the main stage\n    const localParticipantMediaGalleryItem = (\n      <div key=\"localParticipantTile\" className={mediaGalleryStyle}>\n        <LocalStreamMedia label={displayName} stream={props.localVideoStream} />\n      </div>\n    );\n\n    remoteParticipantsMediaGalleryItems.unshift(localParticipantMediaGalleryItem);\n\n    return remoteParticipantsMediaGalleryItems;\n  };\n\n  const getSubstageMediaGalleryTilesForParticipants = (participants: RemoteParticipant[]): JSX.Element[] => {\n    const remoteParticipantsMediaGalleryItems = participants.map((participant) => (\n      <div key={`${utils.getId(participant.identifier)}-tile`} className={substageMediaGalleryStyle}>\n        <RemoteStreamMedia\n          key={utils.getId(participant.identifier)}\n          stream={participant.videoStreams[0]}\n          isParticipantStreamSelected={false}\n          label={participant.displayName ?? utils.getId(participant.identifier)}\n        />\n      </div>\n    ));\n\n    return remoteParticipantsMediaGalleryItems;\n  };\n\n  // determine number of rows/columns to add to the grid\n  const numberStreamsToRender = useMemo(() => clamp(props.remoteParticipants.length, 0, numRemoteParticipantsToRender), [props.remoteParticipants.length])\n  if (cols[numberStreamsToRender] !== gridCol) {\n    if (numberStreamsToRender > cols.length - 1) {\n      throw `attempting to set up a number of columns in the gallery for an unexpected number of participants ${numberStreamsToRender}`\n    }\n    setGridCol(cols[numberStreamsToRender]);\n  }\n\n  if (rows[numberStreamsToRender] !== gridRow) {\n    if (numberStreamsToRender > rows.length - 1) {\n      throw `attempting to set up a number of rows in the gallery for an expected unnumber of participants ${numberStreamsToRender}`\n    }\n    setGridRow(rows[numberStreamsToRender]);\n  } \n\n  // sort by dominance\n  const participantsToLayout = props.remoteParticipants.sort((a, b) => {\n    const isParticipantADominant =\n      props.dominantParticipants.filter((p) => p.participantId === utils.getId(a.identifier)).length > 0;\n    const isParticipantBDominant =\n      props.dominantParticipants.filter((p) => p.participantId === utils.getId(b.identifier)).length > 0;\n    if (isParticipantADominant && !isParticipantBDominant) {\n      return -1;\n    } else if (!isParticipantADominant && isParticipantBDominant) {\n      return 1;\n    }\n    return 0;\n  });\n\n  const mainStageParticipants = participantsToLayout.slice(0, numRemoteParticipantsToRender);\n  const substageParticipants = participantsToLayout.slice(numRemoteParticipantsToRender);\n  // don't show the substage if its not necessary\n  const isSubstageVisible = substageParticipants.length > 0;\n  return (\n    <Stack style={{ height: '100%' }}>\n      <div\n        id=\"video-gallery\"\n        className={mediaGalleryGridStyle}\n        style={{\n          gridTemplateRows: `repeat(${gridRow}, minmax(0, 1fr))`,\n          gridTemplateColumns: `repeat(${gridCol}, 1fr)`\n        }}\n      >\n        {getMediaGalleryTilesForParticipants(mainStageParticipants, props.displayName)}\n      </div>\n      {isSubstageVisible && (\n        <Stack horizontal className={mediaGallerySubstageStyle}>\n          {getSubstageMediaGalleryTilesForParticipants(substageParticipants)}\n        </Stack>\n      )}\n    </Stack>\n  );\n};","import { mergeStyles, getTheme } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const fullScreenStyle = mergeStyles({\n  padding: '0.5em',\n  borderRight: '1px solid rgba(0,0,0,0.05)',\n  height: '100%',\n  width: '100%',\n  background: palette.neutralLighterAlt\n});\n\nexport const hiddenFullScreenStyle = mergeStyles({\n  display: 'none',\n  borderRight: '1px solid rgba(0,0,0,0.05)',\n  height: '100%',\n  width: '100%',\n  background: palette.neutralLighterAlt\n});\n\nexport const loadingStyle = mergeStyles({\n  height: '100%',\n  display: 'flex',\n  justifyContent: 'center'\n});\n","import React, { useEffect, useState, useRef } from 'react';\nimport { ParticipantStream } from '../core/reducers';\nimport { hiddenFullScreenStyle, fullScreenStyle, loadingStyle } from './styles/MediaFullScreen.styles';\nimport { RemoteVideoStream, VideoStreamRenderer, VideoStreamRendererView } from '@azure/communication-calling';\nimport { Spinner, SpinnerSize } from '@fluentui/react';\nimport { utils } from 'Utils/Utils';\n\nexport interface MediaFullScreenProps {\n  activeScreenShareStream: ParticipantStream;\n}\n\nexport const MediaFullScreen = (props: MediaFullScreenProps): JSX.Element => {\n  const [loading, setLoading] = useState(true);\n  const fullScreenStreamMediaId = 'fullScreenStreamMediaId';\n  const rendererView = useRef<VideoStreamRendererView | undefined>();\n\n  /**\n   * Start stream after DOM has rendered\n   */\n\n  const activeScreenShareStream = props.activeScreenShareStream;\n\n  useEffect(() => {\n    (async () => {\n      if (activeScreenShareStream && activeScreenShareStream.stream) {\n        const stream: RemoteVideoStream = activeScreenShareStream.stream;\n        const renderer: VideoStreamRenderer = new VideoStreamRenderer(stream);\n        rendererView.current = await renderer.createView({ scalingMode: 'Fit' });\n  \n        const container = document.getElementById(fullScreenStreamMediaId);\n        if (container && container.childElementCount === 0) {\n          setLoading(false);\n          container.appendChild(rendererView.current.target);\n        }\n      } else {\n        if (rendererView.current) {\n          rendererView.current.dispose();\n        }\n      }\n    })();\n  }, [activeScreenShareStream]);\n\n  const displayName =\n    props.activeScreenShareStream.user.displayName ?? utils.getId(props.activeScreenShareStream.user.identifier);\n\n  return (\n    <>\n      {loading && (\n        <div className={loadingStyle}>\n          <Spinner label={`Loading ${displayName}'s screen`} size={SpinnerSize.xSmall} />\n        </div>\n      )}\n      <div id={fullScreenStreamMediaId} className={loading ? hiddenFullScreenStyle : fullScreenStyle}></div>\n    </>\n  );\n};\n","import { IStackItemStyles, IStackStyles, getTheme, mergeStyles } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const headerStyles: IStackItemStyles = {\n  root: {\n    width: '100%'\n  }\n};\nexport const containerStyles: IStackStyles = {\n  root: {\n    height: '100%',\n    minHeight: '9.375rem',\n    width: '100%'\n  }\n};\nexport const messageBarStyles: IStackStyles = {\n  root: {\n    width: '100%'\n  }\n};\nexport const paneStyles: IStackItemStyles = {\n  root: {\n    width: '17.875rem'\n  }\n};\nexport const overlayStyles: IStackItemStyles = {\n  root: {\n    background: palette.white,\n    marginTop: '4rem'\n  }\n};\nexport const hiddenContainerClassName: IStackItemStyles = {\n  root: {\n    border: `solid 1px ${palette.neutralLighterAlt}`,\n    height: '100%',\n    display: 'none'\n  }\n};\nexport const activeContainerClassName: IStackItemStyles = {\n  root: {\n    border: `solid 1px ${palette.neutralLighterAlt}`,\n    height: 'calc(100% - 3px)',\n    display: 'initial',\n    width: '100%'\n  }\n};\n\nexport const loadingStyle = mergeStyles({\n  height: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n","import { Link, MessageBar } from \"@fluentui/react\";\nimport React, { useEffect, useState } from \"react\"\n\nexport type ComplianceBannerProps = {\n    callTranscribeState: boolean;\n    callRecordState: boolean;\n}\nexport const ComplianceBanner = (props: ComplianceBannerProps): JSX.Element => {\n    const [previousCallTranscribeState, setPreviousCallTranscribeState] = useState(false);\n    const [previousCallRecordState, setPreviousCallRecordState] = useState(false);\n    const [variant, setVariant] = useState(0);\n    \n    const TRANSCRIPTION_STOPPED_STILL_RECORDING = 1;\n    const RECORDING_STOPPED_STILL_TRANSCRIBING = 2;\n    const RECORDING_AND_TRANSCRIPTION_STOPPED = 3;\n    const RECORDING_AND_TRANSCRIPTION_STARTED = 4;\n    const TRANSCRIPTION_STARTED = 5;\n    const RECORDING_STOPPED = 6;\n    const RECORDING_STARTED = 7;\n    const RECORDING_STOPPED_AND_SAVED = 8;\n    const NO_STATE = 0;\n\n    const {callTranscribeState, callRecordState} = props;\n\n    useEffect(() => {\n        if (previousCallRecordState && previousCallTranscribeState) {\n            if (callRecordState && !callTranscribeState) {\n                setVariant(TRANSCRIPTION_STOPPED_STILL_RECORDING);\n            }\n            else if (!callRecordState && callTranscribeState) {\n                setVariant(RECORDING_STOPPED_STILL_TRANSCRIBING);\n            }\n            else if (!callRecordState && !callTranscribeState) {\n                setVariant(RECORDING_AND_TRANSCRIPTION_STOPPED);\n            }\n            else {\n                setVariant(NO_STATE);\n            }\n        }\n\n        else if (previousCallRecordState && !previousCallTranscribeState) {\n            if (callRecordState && callTranscribeState) {\n                setVariant(RECORDING_AND_TRANSCRIPTION_STARTED);\n            }\n            else if (!callRecordState && callTranscribeState) {\n                setVariant(TRANSCRIPTION_STARTED);\n            }\n            else if (!callRecordState && !callTranscribeState) {\n                setVariant(RECORDING_STOPPED)\n            }\n            else {\n                setVariant(NO_STATE);\n            }\n        }\n\n        else if (!previousCallRecordState && previousCallTranscribeState) {\n            if (callRecordState && callTranscribeState) {\n                setVariant(RECORDING_AND_TRANSCRIPTION_STARTED)\n            }\n            else if (!callRecordState && callTranscribeState) {\n                setVariant(RECORDING_STARTED)\n            }\n            else if (!callRecordState && !callTranscribeState) {\n                setVariant(RECORDING_STOPPED_AND_SAVED)\n            }\n            else {\n                setVariant(NO_STATE);\n            }\n            \n        }\n\n        else if (!previousCallRecordState && !previousCallTranscribeState) {\n            if (callRecordState && callTranscribeState) {\n                setVariant(RECORDING_AND_TRANSCRIPTION_STARTED)\n            }\n            else if (callRecordState && !callTranscribeState) {\n                setVariant(RECORDING_STARTED)\n            }\n            else if (!callRecordState && callTranscribeState) {\n                setVariant(TRANSCRIPTION_STARTED)\n            }\n            else {\n                setVariant(NO_STATE);\n            }\n        }\n\n        setPreviousCallTranscribeState(callTranscribeState);\n        setPreviousCallRecordState(callRecordState);;\n\n    }, [callTranscribeState, callRecordState])\n\n    function PrivacyPolicy(): JSX.Element {\n        return (\n          <Link\n            href=\"https://privacy.microsoft.com/en-US/privacystatement#mainnoticetoendusersmodule\"\n            target=\"_blank\"\n            underline\n          >\n            Privacy policy\n          </Link>\n        );\n      }\n      \n      function LearnMore(): JSX.Element {\n        return (\n          <Link\n            href=\"https://support.microsoft.com/en-us/office/record-a-meeting-in-teams-34dfbe7f-b07d-4a27-b4c6-de62f1348c24\"\n            target=\"_blank\"\n            underline\n          >\n            Learn more\n          </Link>\n        );\n      }\n\n      function getBannerMessage(variant: number): JSX.Element {\n        switch(variant) {\n            case TRANSCRIPTION_STOPPED_STILL_RECORDING:\n                return (\n                    <>\n                        <b>Transcription has stopped.</b> You are now only recording this meeting.\n                        <PrivacyPolicy />\n                    </>\n                )\n            case RECORDING_STOPPED_STILL_TRANSCRIBING:\n                return (\n                    <>\n                        <b>Recording has stopped.</b> You are now only transcribing this meeting.\n                        <PrivacyPolicy />\n                    </>\n                )\n            case RECORDING_AND_TRANSCRIPTION_STOPPED:\n                return (\n                    <>\n                        <b>Recording and transcription are being saved. </b> Recording and transcription have stopped.\n                        <LearnMore />\n                    </>\n                )\n            case RECORDING_AND_TRANSCRIPTION_STARTED:\n                return (\n                    <>\n                        <b>Recording and transcription have started.</b> By joining, you are giving consent for this meeting to be\n                        transcribed.\n                        <PrivacyPolicy />\n                    </>\n                )\n            case TRANSCRIPTION_STARTED:\n                return (\n                    <>\n                        <b>Transcription has started.</b> By joining, you are giving consent for this meeting to be transcribed.\n                        <PrivacyPolicy />\n                    </>\n                )\n            case RECORDING_STOPPED:\n                return (\n                    <>\n                        <b>Recording is being saved.</b> Recording has stopped.\n                        <LearnMore />\n                    </>\n                )\n            case RECORDING_STARTED:\n                return (\n                    <>\n                        <b>Recording has started.</b> By joining, you are giving consent for this meeting to be transcribed.\n                        <PrivacyPolicy />\n                    </>\n                )\n            case RECORDING_STOPPED_AND_SAVED:\n                return (\n                    <>\n                        <b>Transcription is being saved.</b> Transcription has stopped.\n                        <LearnMore />\n                    </>\n                )\n      }\n      return <></>\n    }\n\n    return variant === NO_STATE ? <></> : <MessageBar onDismiss={()=> {setVariant(NO_STATE)}}  dismissButtonAriaLabel=\"Close\">{getBannerMessage(variant)}</MessageBar>\n}","// © Microsoft Corporation. All rights reserved.\nimport React from 'react';\nimport { Stack, MessageBar, MessageBarType, DefaultButton } from '@fluentui/react';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { OkButtonStyles } from './styles/MediaControls.styles';\n\nexport interface DialogBoxProps {\n  message: string;\n  dismissDialogBox(): void;\n  isDialogBoxVisiblile: boolean;\n}\nconst modalPropsStyles = { main: { width: 340 } };\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Error !'\n};\nexport const DialogBox = (props: DialogBoxProps): JSX.Element => {\n  const modalProps = React.useMemo(\n    () => ({\n      isBlocking: true,\n      styles: modalPropsStyles\n    }),\n    []\n  );\n\n  return (\n    <Stack>\n      <Dialog\n        hidden={!props.isDialogBoxVisiblile}\n        onDismiss={props.dismissDialogBox}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <MessageBar messageBarType={MessageBarType.error} dismissButtonAriaLabel=\"Close\">\n          {props.message}\n        </MessageBar>\n        <DialogFooter className={OkButtonStyles}>\n          <DefaultButton text=\"OK\" onClick={props.dismissDialogBox} />\n        </DialogFooter>\n      </Dialog>\n    </Stack>\n  );\n};\n","import { connect } from 'react-redux';\nimport { GroupCall, GroupCallProps } from '../components/GroupCall';\nimport { join, setMicrophone } from '../core/sideEffects';\nimport { setLocalVideoStream } from '../core/actions/streams';\nimport { setVideoDeviceInfo, setAudioDeviceInfo } from '../core/actions/devices';\nimport {\n  AudioDeviceInfo,\n  VideoDeviceInfo,\n  LocalVideoStream,\n  TeamsMeetingLinkLocator,\n  GroupCallLocator\n} from '@azure/communication-calling';\nimport { State } from '../core/reducers';\nimport { dialogBoxVisible } from 'core/actions/calls';\n\nconst mapStateToProps = (state: State, props: GroupCallProps) => ({\n  userId: state.sdk.userId,\n  callAgent: state.calls.callAgent,\n  deviceManager: state.devices.deviceManager,\n  screenWidth: props.screenWidth,\n  call: state.calls.call,\n  shareScreen: state.controls.shareScreen,\n  mic: state.controls.mic,\n  callEndReason: state.calls.callEndReason,\n  join: async (locator: GroupCallLocator | TeamsMeetingLinkLocator) => {\n    state.calls.callAgent &&\n      (await join(state.calls.callAgent, locator, {\n        videoOptions: {\n          localVideoStreams: state.streams.localVideoStream ? [state.streams.localVideoStream] : undefined\n        },\n        audioOptions: { muted: !state.controls.mic }\n      }));\n  },\n  remoteParticipants: state.calls.remoteParticipants,\n  callState: state.calls.callState,\n  localVideo: state.controls.localVideo,\n  localVideoStream: state.streams.localVideoStream,\n  screenShareStreams: state.streams.screenShareStreams,\n  videoDeviceInfo: state.devices.videoDeviceInfo,\n  audioDeviceInfo: state.devices.audioDeviceInfo,\n  videoDeviceList: state.devices.videoDeviceList,\n  audioDeviceList: state.devices.audioDeviceList,\n  cameraPermission: state.devices.cameraPermission,\n  microphonePermission: state.devices.microphonePermission,\n  recordingStatus: state.calls.recordingStatus,\n  recordingError: state.calls.recordingError,\n  isDialogBoxVisiblile: state.calls.dialogBoxVisible,\n  isBeingRecorded: state.calls.isBeingRecorded,\n  isBeingTranscribed: state.calls.isBeingTranscribed\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  mute: () => dispatch(setMicrophone(false)),\n  setAudioDeviceInfo: (deviceInfo: AudioDeviceInfo) => {\n    dispatch(setAudioDeviceInfo(deviceInfo));\n  },\n  setVideoDeviceInfo: (deviceInfo: VideoDeviceInfo) => {\n    dispatch(setVideoDeviceInfo(deviceInfo));\n  },\n  dialogBoxVisiblilty: (dialogBoxVisibilty: boolean) => dispatch(dialogBoxVisible(dialogBoxVisibilty)),\n  setLocalVideoStream: (localVideoStream: LocalVideoStream) => dispatch(setLocalVideoStream(localVideoStream))\n});\n\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\nexport default connector(GroupCall);\n","// © Microsoft Corporation. All rights reserved.\nimport React, { useState, useEffect } from 'react';\nimport { Label, Overlay, Stack } from '@fluentui/react';\nimport Header from '../containers/Header';\nimport MediaGallery from '../containers/MediaGallery';\nimport { MediaFullScreen } from './MediaFullScreen';\nimport { CommandPanel, CommandPanelTypes } from './CommandPanel';\nimport { Constants } from '../core/constants';\nimport {\n  headerStyles,\n  containerStyles,\n  paneStyles,\n  hiddenContainerClassName,\n  activeContainerClassName,\n  loadingStyle,\n  overlayStyles,\n  messageBarStyles\n} from './styles/GroupCall.styles';\nimport {\n  Call,\n  LocalVideoStream,\n  AudioDeviceInfo,\n  VideoDeviceInfo,\n  RemoteParticipant,\n  CallAgent,\n  DeviceManager,\n  TeamsMeetingLinkLocator,\n  GroupCallLocator,\n  CallEndReason\n} from '@azure/communication-calling';\nimport { ParticipantStream } from 'core/reducers/index.js';\nimport { ComplianceBanner } from 'components/ComplianceBanner';\nimport { DialogBox } from './DialogBox';\n\nexport interface GroupCallProps {\n  userId: string;\n  groupId: string;\n  call: Call;\n  callAgent: CallAgent;\n  deviceManager: DeviceManager;\n  mic: boolean;\n  remoteParticipants: RemoteParticipant[];\n  callState: string;\n  localVideo: boolean;\n  localVideoStream: LocalVideoStream;\n  screenShareStreams: ParticipantStream[];\n  audioDeviceInfo: AudioDeviceInfo;\n  videoDeviceInfo: VideoDeviceInfo;\n  audioDeviceList: AudioDeviceInfo[];\n  videoDeviceList: VideoDeviceInfo[];\n  screenWidth: number;\n  shareScreen: boolean;\n  callEndReason: CallEndReason;\n  locator: GroupCallLocator | TeamsMeetingLinkLocator;\n  isBeingRecorded: boolean;\n  isBeingTranscribed: boolean;\n  setAudioDeviceInfo(deviceInfo: AudioDeviceInfo): void;\n  setVideoDeviceInfo(deviceInfo: VideoDeviceInfo): void;\n  setLocalVideoStream(stream: LocalVideoStream | undefined): void;\n  mute(): void;\n  join(locator: GroupCallLocator | TeamsMeetingLinkLocator): void;\n  endCallHandler(): void;\n  recordingStatus: string;\n  recordingError: string;\n  dialogBoxVisiblilty(b: boolean): void;\n  isDialogBoxVisiblile: boolean;\n}\n\nexport const GroupCall = (props: GroupCallProps): JSX.Element => {\n  const [selectedPane, setSelectedPane] = useState(CommandPanelTypes.None);\n  const activeScreenShare = props.screenShareStreams && props.screenShareStreams.length === 1;\n\n  const { callAgent, call, join, locator, isBeingRecorded, isBeingTranscribed, callEndReason } = props;\n\n  useEffect(() => {\n    if (callAgent && !call && callEndReason === undefined) {\n      join(locator);\n    }\n  }, [callAgent, call, join, locator, callEndReason]);\n\n  const dismissDialogBox = () => {\n    props.dialogBoxVisiblilty(false);\n  };\n\n  return (\n    <Stack horizontalAlign=\"center\" verticalAlign=\"center\" styles={containerStyles}>\n      <Stack.Item styles={headerStyles}>\n        <Header\n          selectedPane={selectedPane}\n          setSelectedPane={setSelectedPane}\n          endCallHandler={() => { \n            props.endCallHandler(); \n          }}\n          screenWidth={props.screenWidth}\n        />\n      </Stack.Item>\n      <Stack.Item styles={messageBarStyles}>\n        <ComplianceBanner callTranscribeState={isBeingTranscribed} callRecordState={isBeingRecorded} />\n      </Stack.Item>\n      <Stack.Item styles={headerStyles}>\n        {props.isDialogBoxVisiblile && props.recordingError !== '' && (\n          <DialogBox\n            message={props.recordingError}\n            isDialogBoxVisiblile={props.isDialogBoxVisiblile}\n            dismissDialogBox={dismissDialogBox}\n          />\n        )}\n      </Stack.Item>\n      <Stack.Item styles={containerStyles}>\n        { props.shareScreen && (\n          <div className={loadingStyle}>\n          <Label>Your screen is being shared</Label>\n        </div>)\n        }\n        { props.callState === Constants.CONNECTED &&\n          (\n            <Stack horizontal styles={containerStyles}>\n              <Stack.Item grow styles={activeScreenShare ? activeContainerClassName : hiddenContainerClassName}>\n                {activeScreenShare && <MediaFullScreen activeScreenShareStream={props.screenShareStreams[0]} />}\n              </Stack.Item>\n              <Stack.Item grow styles={!activeScreenShare ? activeContainerClassName : hiddenContainerClassName}>\n                <MediaGallery />\n              </Stack.Item>\n              {selectedPane !== CommandPanelTypes.None && (\n                  window.innerWidth > Constants.MINI_HEADER_WINDOW_WIDTH ?\n                <Stack.Item disableShrink styles={paneStyles}>\n                  <CommandPanel {...props} selectedPane={selectedPane} setSelectedPane={setSelectedPane} />\n                </Stack.Item>\n                :\n                <Overlay styles={overlayStyles}>\n                    <CommandPanel {...props} selectedPane={selectedPane} setSelectedPane={setSelectedPane} />\n                </Overlay>\n              )}\n            </Stack>\n          )\n        }\n        {\n          props.callState === Constants.LOBBY && (\n            <Stack horizontal styles={containerStyles}>\n              <div className={loadingStyle} style={{width:'100%'}}>\n                <Label>Waiting to be admitted</Label>\n              </div>\n            </Stack>\n          )\n        }\n      </Stack.Item>\n    </Stack>\n  );\n};\n","import { IStackTokens, mergeStyles } from '@fluentui/react';\n\nexport const mainStackTokens: IStackTokens = {\n  childrenGap: '0.25rem'\n};\nexport const buttonsStackTokens: IStackTokens = {\n  childrenGap: '0.75rem'\n};\nexport const upperStackTokens: IStackTokens = {\n  childrenGap: '1.5rem'\n};\nexport const bottomStackTokens: IStackTokens = {\n  childrenGap: '1.4375rem'\n};\nexport const endCallContainerStyle = mergeStyles({\n  width: '20.625rem'\n});\nexport const endCallTitleStyle = mergeStyles({\n  fontSize: '1.375rem',\n  fontWeight: 600\n});\nexport const buttonStyle = mergeStyles({\n  fontWeight: 600,\n  height: '2.5rem',\n  width: '9.875rem',\n  fontSize: '0.875rem', // 14px\n  padding: 0\n});\nexport const videoCameraIconStyle = mergeStyles({\n  marginRight: '0.375rem',\n  fontSize: '1.375rem'\n});\nexport const bottomStackFooterStyle = mergeStyles({\n  color: 'rgb(0,0,0)',\n  fontSize: '0.875 rem'\n});\n","// © Microsoft Corporation. All rights reserved.\nimport React from 'react';\nimport { DefaultButton, PrimaryButton, Stack } from '@fluentui/react';\nimport { VideoCameraEmphasisIcon } from '@fluentui/react-icons-northstar';\nimport {\n  endCallContainerStyle,\n  endCallTitleStyle,\n  buttonStyle,\n  mainStackTokens,\n  buttonsStackTokens,\n  upperStackTokens,\n  videoCameraIconStyle,\n  bottomStackFooterStyle\n} from './styles/EndCall.styles';\n\nexport interface EndCallProps {\n  message: string;\n  rejoinHandler(): void;\n  homeHandler(): void;\n}\n\nexport const EndCall = (props: EndCallProps): JSX.Element => {\n  const goHomePage = 'Go to homepage';\n  const rejoinCall = 'Rejoin call';\n  const feedbackUrl = 'https://docs.microsoft.com/en-us/answers/search.html?c=&includeChildren=&f=&type=question+OR+idea+OR+kbentry+OR+answer+OR+topic+OR+user&redirect=search%2Fsearch&sort=relevance&q=azure-communication-services';\n\n  return (\n    <Stack verticalAlign=\"center\" tokens={mainStackTokens} className={endCallContainerStyle}>\n      <Stack tokens={upperStackTokens}>\n        <div className={endCallTitleStyle}>{props.message}</div>\n        <Stack horizontal tokens={buttonsStackTokens}>\n          <PrimaryButton className={buttonStyle} onClick={props.rejoinHandler}>\n            <VideoCameraEmphasisIcon className={videoCameraIconStyle} size=\"medium\" />\n            {rejoinCall}\n          </PrimaryButton>\n          <DefaultButton className={buttonStyle} onClick={props.homeHandler}>\n            {goHomePage}\n          </DefaultButton>\n        </Stack>\n        <div className={bottomStackFooterStyle}>\n          <a href={feedbackUrl}>Give Feedback</a>&nbsp;on this sample app on Github\n        </div>\n      </Stack>\n    </Stack>\n  );\n};\n","import { IStackTokens, mergeStyles, getTheme } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const imgStyle = mergeStyles({\n  width: '27.25rem',\n  height: '20.125rem',\n  selectors: {\n    '@media (max-width: 67.1875rem)': {\n      display: 'none'\n    }\n  }\n});\nexport const containerTokens: IStackTokens = {\n  childrenGap: '3.4375rem'\n};\nexport const upperStackTokens: IStackTokens = {\n  childrenGap: '2.625rem'\n};\nexport const nestedStackTokens: IStackTokens = {\n  childrenGap: '0.75rem'\n};\nexport const listStyle = mergeStyles({\n  listStyleType: 'none',\n  fontSize: '0.875rem',\n  margin: 0,\n  padding: 0,\n  listStylePosition: 'outside'\n});\nexport const iconStyle = mergeStyles({\n  marginRight: '0.4375rem',\n  color: palette.themePrimary\n});\nexport const headerStyle = mergeStyles({\n  fontWeight: 600,\n  fontSize: '2.25rem', // 36px\n  maxWidth: '23.188rem'\n});\nexport const videoCameraIconStyle = mergeStyles({\n  marginRight: '0.375rem',\n  fontSize: '1.375rem'\n});\nexport const buttonStyle = mergeStyles({\n  fontWeight: 600,\n  fontSize: '0.875rem', // 14px\n  width: '7.75rem',\n  height: '2.5rem',\n  borderRadius: 3,\n  padding: '0.625rem'\n});\nexport const upperStackStyle = mergeStyles({\n  selectors: {\n    '@media (max-width: 53.4375rem)': {\n      padding: '0.625rem'\n    }\n  }\n});\nexport const listItemStyle = mergeStyles({\n  paddingLeft: '2em',\n  textIndent: '-1em'\n});\nexport const Itemboxhid = mergeStyles({\n    overflow: 'hidden !important' as 'hidden'\n});\n\n","// © Microsoft Corporation. All rights reserved.\nimport React, { useState }  from 'react';\nimport { Stack, PrimaryButton, Icon, Image, IImageStyles, TextField } from '@fluentui/react';\nimport { VideoCameraEmphasisIcon } from '@fluentui/react-icons-northstar';\nimport heroSVG from '../assets/hero.svg';\nimport basicCreditCardSVG from '../assets/basicCreditCard.svg';\nimport { v1 as createGUID } from 'uuid';\nimport {\n  imgStyle,\n  containerTokens,\n    listStyle,\n    Itemboxhid,\n  iconStyle,\n  headerStyle,\n  upperStackTokens,\n  videoCameraIconStyle,\n  buttonStyle,\n  nestedStackTokens,\n  upperStackStyle, listItemStyle\n} from './styles/HomeScreen.styles';\n\nexport interface HomeScreenProps {\n  startCallHandler(groupId: string): void;\n  joinTeamsMeeting(meetingLink: string): void;\n}\n\nconst imageStyleProps: IImageStyles = {\n  image: {\n    height: '100%',\n    width: '100%'\n  },\n  root: {}\n};\n\nexport const HomeScreen = (props: HomeScreenProps): JSX.Element => {\n  const [meetingUrl, setMeetingUrl] = useState('');\n  const groupId: string = createGUID();\n  const iconName = 'SkypeCircleCheck';\n  const imageProps = { src: heroSVG.toString() };\n  const imagePropsCard = { src: basicCreditCardSVG.toString() };\n  const headerTitle = 'Banking communication service';\n  const startCallButtonText = 'Start a call';\n  const joinTeamsCallText = 'Join a Teams Meeting';\n  const listItems = [\n    'Customize with your web stack',\n    'Connect with users with seamless collaboration across web',\n    'High quality, low latency capabilities for an uninterrupted calling experience',\n    'Learn about this'\n  ];\n    return (\n\n    <Stack horizontal horizontalAlign=\"center\" verticalAlign=\"center\" tokens={containerTokens}>\n          <Stack className={upperStackStyle} tokens={upperStackTokens}>\n            \n              <div className={headerStyle}>{headerTitle}</div>\n            \n           \n   \n        <Stack.Item>\n          <PrimaryButton disabled={meetingUrl === ''} onClick={() => props.joinTeamsMeeting(meetingUrl)}>\n            <VideoCameraEmphasisIcon className={videoCameraIconStyle} size=\"medium\" />\n            {joinTeamsCallText}\n          </PrimaryButton>\n        <TextField onChange={(event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => { newValue === undefined ? setMeetingUrl('') : setMeetingUrl(newValue)}} />\n        </Stack.Item>\n      </Stack>\n      <Image\n        alt=\"Welcome to the Azure Communication Services Calling sample app\"\n        className={imgStyle}\n        styles={imageStyleProps}\n        {...imageProps}\n            />\n\n            <Image\n                alt=\"Welcome to the Azure Communication Services Calling sample app\"\n                className={imgStyle}\n                styles={imageStyleProps}\n                {...imagePropsCard}\n            />\n    </Stack>\n  );\n};","import { IToggleStyles, IStackTokens, mergeStyles, IImageStyles, getTheme } from '@fluentui/react';\n\nconst palette = getTheme().palette;\nexport const toggleStyle: Partial<IToggleStyles> = {\n  root: { marginBottom: 0 }\n};\nexport const imgStyles: Partial<IImageStyles> = {\n  root: { width: '10rem', height: '10.5rem' }\n};\nexport const toggleButtonsBarToken: IStackTokens = {\n  childrenGap: '0.625rem',\n  padding: '0.625rem'\n};\nexport const localPreviewContainerStyle = mergeStyles({\n  maxWidth: '25rem',\n  minWidth: '12.5rem',\n  width: '100%',\n  height: '100%',\n  maxHeight: '18.75rem',\n  minHeight: '12.5rem',\n  background: palette.neutralLighter,\n  color: palette.neutralPrimaryAlt\n});\nexport const toggleButtonsBarStyle = mergeStyles({\n  height: '2.8125rem',\n  width: '100%',\n  backgroundColor: palette.neutralQuaternaryAlt\n});\nexport const localPreviewStyle = mergeStyles({\n  width: '100%',\n  height: '100%',\n  maxHeight: '15.9375rem'\n});\n","import { mergeStyles, IStackTokens } from '@fluentui/react';\n\nexport const configurationStackTokens: IStackTokens = {\n  childrenGap: '3rem'\n};\nexport const videoCameraIconStyle = mergeStyles({\n  marginRight: '0.375rem',\n  fontSize: '1.375rem'\n});\nexport const buttonStyle = mergeStyles({\n  fontWeight: 600,\n  fontSize: '0.875rem', // 14px\n  height: '2.75rem',\n  width: '100%',\n  marginTop: '2.125rem',\n  maxWidth: '18.75rem',\n  minWidth: '12.5rem'\n});\nexport const mainContainerStyle = mergeStyles({\n  maxWidth: '46.875rem',\n  width: '100%',\n  height: '100%',\n  selectors: {\n    '@media (max-width: 750px)': {\n      padding: '0.625rem',\n      height: '100%'\n    }\n  }\n});\nexport const localSettingsContainerStyle = mergeStyles({\n  width: '100%',\n  maxWidth: '18.75rem'\n});\nexport const fullScreenStyle = mergeStyles({\n  height: '100%',\n  width: '100%'\n});\nexport const verticalStackStyle = mergeStyles({\n  height: '100%',\n  width: '100%',\n  justifyContent: 'space-evenly'\n});\nexport const localVideoWrapperStyle = mergeStyles({\n  minWidth: '12.5rem'\n});\n\nexport const inputBoxStyle = mergeStyles({\n  boxSizing: 'border-box',\n  height: '2.5rem',\n  width: '18.75rem',\n  border: '1px solid #605e5c',\n  borderRadius: '2px',\n  backgroundColor: '#FFFFFF'\n});\n\nexport const inputBoxTextStyle = mergeStyles({\n  fontSize: '0.875rem',\n  fontWeight: 600,\n  lineHeight: '1.5rem',\n  '::-webkit-input-placeholder': {\n    fontSize: '0.875rem',\n    fontWeight: 600\n  },\n  '::-moz-placeholder': {\n    fontSize: '0.875rem',\n    fontWeight: 600\n  },\n  ':-moz-placeholder': {\n    fontSize: '0.875rem',\n    fontWeight: 600\n  }\n});\n\nexport const inputBoxWarningStyle = mergeStyles({\n  boxSizing: 'border-box',\n  height: '2.5rem',\n  width: '18.75rem',\n  border: '1px solid #e81123',\n  borderRadius: '2px',\n  backgroundColor: '#FFFFFF',\n  fontSize: '0.875rem'\n});\n\nexport const labelFontStyle = mergeStyles({\n  fontSize: '0.875rem',\n  fontWeight: 600,\n  color: 'rgb(50, 49, 48)',\n  boxSizing: 'border-box',\n  boxShadow: 'none',\n  margin: 0,\n  display: 'inline-block',\n  padding: '5px 0px',\n  overflowWrap: 'break-word'\n});\n\nexport const warningStyle = mergeStyles({\n  width: '18.75rem',\n  backgroundColor: '#FFFFFF',\n  marginTop: '0.188rem',\n  marginBottom: '0.188rem',\n  marginLeft: '0.188rem',\n  color: '#e81123',\n  fontSize: '.7375rem',\n  fontWeight: '400'\n});\n","import React from 'react';\nimport { TextField } from '@fluentui/react';\n\nimport {\n  inputBoxStyle,\n  inputBoxTextStyle,\n  inputBoxWarningStyle,\n  labelFontStyle,\n  warningStyle\n} from './styles/Configuration.styles';\n\ninterface DisplayNameFieldProps {\n  setName(name: string): void;\n  name: string;\n  setEmptyWarning(isEmpty: boolean): void;\n  isEmpty: boolean;\n}\n\nconst TextFieldStyleProps = {\n  wrapper: {\n    height: '2.3rem'\n  },\n  fieldGroup: {\n    height: '2.3rem'\n  }\n};\n\nexport const DisplayNameField = (props: DisplayNameFieldProps): JSX.Element => {\n  const onNameTextChange = (event: any) => {\n    props.setName(event.target.value);\n    if (event.target.value) {\n      props.setEmptyWarning(false);\n    } else {\n      props.setEmptyWarning(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className={labelFontStyle}>Name</div>\n      <TextField\n        autoComplete=\"off\"\n        inputClassName={inputBoxTextStyle}\n        ariaLabel=\"Choose your name\"\n        borderless={true}\n        className={props.isEmpty ? inputBoxWarningStyle : inputBoxStyle}\n        onChange={onNameTextChange}\n        id=\"name\"\n        placeholder=\"Enter your name\"\n        defaultValue={props.name}\n        styles={TextFieldStyleProps}\n      />\n      {props.isEmpty && (\n        <div role=\"alert\" className={warningStyle}>\n          {' '}\n          Name cannot be empty{' '}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { connect } from 'react-redux';\nimport { Configuration as ConfigurationScreen, ConfigurationScreenProps } from '../components/Configuration';\nimport { setVideoDeviceInfo, setAudioDeviceInfo } from '../core/actions/devices';\nimport { initCallAgent, initCallClient, updateDevices } from '../core/sideEffects';\nimport { setMic } from '../core/actions/controls';\nimport { State } from '../core/reducers';\nimport { AudioDeviceInfo, VideoDeviceInfo, LocalVideoStream, CallClient } from '@azure/communication-calling';\nimport { setLocalVideoStream } from '../core/actions/streams';\n\nconst mapStateToProps = (state: State, props: ConfigurationScreenProps) => ({\n  deviceManager: state.devices.deviceManager,\n  callClient: state.sdk.callClient,\n  callAgent: state.calls.callAgent,\n  mic: state.controls.mic,\n  screenWidth: props.screenWidth,\n  localVideoStream: state.streams.localVideoStream,\n  audioDeviceInfo: state.devices.audioDeviceInfo,\n  videoDeviceInfo: state.devices.videoDeviceInfo,\n  videoDeviceList: state.devices.videoDeviceList,\n  audioDeviceList: state.devices.audioDeviceList,\n  cameraPermission: state.devices.cameraPermission,\n  microphonePermission: state.devices.microphonePermission\n});\n\nconst mapDispatchToProps = (dispatch: any, props: ConfigurationScreenProps) => ({\n  setLocalVideoStream: (localVideoStream: LocalVideoStream) => dispatch(setLocalVideoStream(localVideoStream)),\n  setMic: (mic: boolean) => dispatch(setMic(mic)),\n  setAudioDeviceInfo: (deviceInfo: AudioDeviceInfo) => dispatch(setAudioDeviceInfo(deviceInfo)),\n  setVideoDeviceInfo: (deviceInfo: VideoDeviceInfo) => dispatch(setVideoDeviceInfo(deviceInfo)),\n  setupCallClient: (unsupportedStateHandler: () => void) => dispatch(initCallClient(unsupportedStateHandler)),\n  setupCallAgent: (callClient: CallClient, displayName: string) =>\n    dispatch(initCallAgent(callClient, displayName, props.callEndedHandler)),\n  updateDevices: () => dispatch(updateDevices())\n});\n\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\nexport default connector(ConfigurationScreen);\n","// © Microsoft Corporation. All rights reserved.\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, Spinner, PrimaryButton } from '@fluentui/react';\nimport { LocalPreview } from './LocalPreview';\nimport { LocalSettings } from './LocalSettings';\nimport { DisplayNameField } from './DisplayNameField';\nimport {\n  VideoDeviceInfo,\n  AudioDeviceInfo,\n  LocalVideoStream,\n  DeviceManager,\n  CallAgent,\n  CallEndReason,\n  CallClient\n} from '@azure/communication-calling';\nimport { VideoCameraEmphasisIcon } from '@fluentui/react-icons-northstar';\nimport {\n  videoCameraIconStyle,\n  configurationStackTokens,\n  buttonStyle,\n  localSettingsContainerStyle,\n  mainContainerStyle,\n  fullScreenStyle,\n  verticalStackStyle\n} from './styles/Configuration.styles';\n\nexport interface ConfigurationScreenProps {\n  userId: string;\n  groupId: string;\n  callClient: CallClient;\n  callAgent: CallAgent;\n  deviceManager: DeviceManager;\n  setupCallClient(unsupportedStateHandler: () => void): void;\n  setupCallAgent(callClient: CallClient, displayName: string): void;\n  startCallHandler(): void;\n  unsupportedStateHandler: () => void;\n  callEndedHandler: (reason: CallEndReason) => void;\n  videoDeviceList: VideoDeviceInfo[];\n  audioDeviceList: AudioDeviceInfo[];\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\n  mic: boolean;\n  setMic(mic: boolean): void;\n  setLocalVideoStream(stream: LocalVideoStream | undefined): void;\n  localVideoRendererIsBusy: boolean;\n  videoDeviceInfo: VideoDeviceInfo;\n  audioDeviceInfo: AudioDeviceInfo;\n  localVideoStream: LocalVideoStream;\n  screenWidth: number;\n}\n\nexport const Configuration = (props: ConfigurationScreenProps): JSX.Element => {\n  const spinnerLabel = 'Initializing call client...';\n  const buttonText = 'Start call';\n\n  const createUserId = () => 'user' + Math.ceil(Math.random() * 1000);\n\n  const [name, setName] = useState(createUserId());\n  const [emptyWarning, setEmptyWarning] = useState(false);\n\n  const {setupCallClient, setupCallAgent, unsupportedStateHandler, callClient} = props;\n\n  const memoizedSetupCallClient = useCallback(() => setupCallClient(unsupportedStateHandler), [unsupportedStateHandler]);\n\n  useEffect(() => {\n    memoizedSetupCallClient();\n  }, [memoizedSetupCallClient]);\n\n  return (\n    <Stack className={mainContainerStyle} horizontalAlign=\"center\" verticalAlign=\"center\">\n      {props.deviceManager ? (\n        <Stack\n          className={props.screenWidth > 750 ? fullScreenStyle : verticalStackStyle}\n          horizontal={props.screenWidth > 750}\n          horizontalAlign=\"center\"\n          verticalAlign=\"center\"\n          tokens={props.screenWidth > 750 ? configurationStackTokens : undefined}\n        >\n          <LocalPreview\n            mic={props.mic}\n            setMic={props.setMic}\n            setLocalVideoStream={props.setLocalVideoStream}\n            videoDeviceInfo={props.videoDeviceInfo}\n            audioDeviceInfo={props.audioDeviceInfo}\n            localVideoStream={props.localVideoStream}\n            videoDeviceList={props.videoDeviceList}\n            audioDeviceList={props.audioDeviceList}\n          />\n          <Stack className={localSettingsContainerStyle}>\n            <DisplayNameField setName={setName} name={name} setEmptyWarning={setEmptyWarning} isEmpty={emptyWarning} />\n            <div>\n              <LocalSettings\n                videoDeviceList={props.videoDeviceList}\n                audioDeviceList={props.audioDeviceList}\n                audioDeviceInfo={props.audioDeviceInfo}\n                videoDeviceInfo={props.videoDeviceInfo}\n                setVideoDeviceInfo={props.setVideoDeviceInfo}\n                setAudioDeviceInfo={props.setAudioDeviceInfo}\n                deviceManager={props.deviceManager}\n              />\n            </div>\n            <div>\n              <PrimaryButton\n                className={buttonStyle}\n                onClick={async () => {\n                  if (!name) {\n                    setEmptyWarning(true);\n                  } else {\n                    setEmptyWarning(false);\n                    await setupCallAgent(callClient, name);\n                    props.startCallHandler();\n                  }\n                }}\n              >\n                <VideoCameraEmphasisIcon className={videoCameraIconStyle} size=\"medium\" />\n                {buttonText}\n              </PrimaryButton>\n            </div>\n          </Stack>\n        </Stack>\n      ) : (\n        <Spinner label={spinnerLabel} ariaLive=\"assertive\" labelPosition=\"top\" />\n      )}\n    </Stack>\n  );\n};\n","// © Microsoft Corporation. All rights reserved.\nimport React, { useState, useEffect, useCallback } from 'react';\nimport GroupCall from './containers/GroupCall';\nimport { Provider } from 'react-redux';\nimport { EndCall } from './components/EndCall';\nimport { HomeScreen } from './components/HomeScreen';\nimport ConfigurationScreen from './containers/Configuration';\nimport { loadTheme, initializeIcons } from '@fluentui/react';\nimport { utils } from './Utils/Utils';\nimport { CallEndReason, GroupLocator, TeamsMeetingLinkLocator } from '@azure/communication-calling';\nimport { store } from 'core/store';\nimport { initLogger } from 'feedbacks/logger';\n\nconst sdkVersion = require('../package.json').dependencies['@azure/communication-calling'];\nconst lastUpdated = `Last Updated ${utils.getBuildTime()} with @azure/communication-calling:${sdkVersion}`;\n\nloadTheme({});\ninitializeIcons();\ninitLogger();\n\nconst App = (): JSX.Element => {\n  const [page, setPage] = useState('home');\n  const [callEndReason, setCallEndReason] = useState<CallEndReason | undefined>();\n  const [screenWidth, setScreenWidth] = useState(0);\n\n  const unsupportedStateHandler = useCallback((): void => setPage('unsupported'), []);\n\n  useEffect(() => {\n    const setWindowWidth = () => {\n      const width = typeof window !== 'undefined' ? window.innerWidth : 0;\n      setScreenWidth(width);\n    };\n    setWindowWidth();\n    window.addEventListener('resize', setWindowWidth);\n    return () => window.removeEventListener('resize', setWindowWidth);\n  }, []);\n\n  const getGroupIdFromUrl = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('groupId');\n  };\n\n  const getTeamsMeetingLinkFromUrl = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('meeting');\n  }\n\n  const getMeetingLink = () => {\n    const encodedTeamsMeetingLink = getTeamsMeetingLinkFromUrl()\n    if (!encodedTeamsMeetingLink) {\n      return '';\n    }\n    return decodeURIComponent(encodedTeamsMeetingLink);\n  }\n\n  const getGroupId = () => {\n    const groupId = getGroupIdFromUrl();\n    return groupId ? groupId : ''\n  };\n\n  const getLocator = (): GroupLocator | TeamsMeetingLinkLocator => {\n    const meetingLink = getMeetingLink();\n    \n    if (meetingLink === '') {\n      return { groupId: getGroupId() }\n    } else {\n      return { meetingLink: meetingLink }\n    }\n  }\n\n  const getContent = () => {\n    if (page === 'home') {\n      return (\n        <HomeScreen\n          startCallHandler={(groupId: string) => {\n            window.location.href = window.location.href + '?groupId=' + encodeURIComponent(groupId);\n          }}\n          joinTeamsMeeting={(meetingUrl: string) => {\n            window.location.href = window.location.href + '?meeting=' + encodeURIComponent(meetingUrl);\n          }}\n        />\n      );\n    } else if (page === 'configuration') {\n      return (\n        <ConfigurationScreen\n          startCallHandler={() => setPage('call')}\n          unsupportedStateHandler={unsupportedStateHandler}\n          callEndedHandler={(errorMsg: CallEndReason) => { setCallEndReason(errorMsg); setPage('error');} }\n          screenWidth={screenWidth}\n        />\n      );\n    } else if (page === 'call') {\n      return (\n        <GroupCall\n          endCallHandler={() => setPage('endCall')}\n          locator={getLocator()}\n          screenWidth={screenWidth}\n        />\n      );\n    } else if (page === 'endCall') {\n      return (\n        <EndCall\n          message={'You left the call'}\n          rejoinHandler={() => window.location.reload()}\n          homeHandler={() => {\n            window.location.href = window.location.href.split('?')[0];\n          }}\n        />\n      );\n    } else if (page === 'unsupported') {\n      window.document.title = 'Unsupported browser';\n      return (\n        <>\n          <a href=\"https://docs.microsoft.com/en-us/azure/communication-services/concepts/voice-video-calling/calling-sdk-features#calling-client-library-browser-support\">Learn more</a>&nbsp;about\n          browsers and platforms supported by the web calling sdk\n        </>\n      );\n    } else if (page === 'error') {\n      window.document.title = 'Call Ended';\n      return (\n        <div>\n          <div>{`The call has ended with this error code (Code: ${callEndReason?.code} Subcode: ${callEndReason?.subCode})`}</div >\n\n          <div>\n          <a href=\"https://docs.microsoft.com/en-us/azure/communication-services/concepts/troubleshooting-info?tabs=csharp%2Cjavascript%2Cdotnet\">Learn more</a>&nbsp;about\n          why this Azure Communication Services call has ended.</div>\n        </div>\n      );\n    } else {\n      return <></>\n    }\n  };\n\n  if (getMeetingLink() && page === 'home') {\n    setPage('configuration')\n  }\n  if (getGroupIdFromUrl() && page === 'home') {\n    setPage('configuration');\n  }\n\n  return <Provider store={store}>{getContent()}</Provider>;\n};\n\nwindow.setTimeout(() => {\n  try {\n    console.log(`Azure Communication Services sample group calling app: ${lastUpdated}`);\n  } catch (e) {}\n}, 0);\n\nexport default App;\n","// © Microsoft Corporation. All rights reserved.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from '@fluentui/react-northstar';\nimport { svgIconStyles } from '@fluentui/react-northstar/dist/es/themes/teams/components/SvgIcon/svgIconStyles';\nimport { svgIconVariables } from '@fluentui/react-northstar/dist/es/themes/teams/components/SvgIcon/svgIconVariables';\nimport * as siteVariables from '@fluentui/react-northstar/dist/es/themes/teams/siteVariables';\n\nconst iconTheme = {\n  componentStyles: {\n    SvgIcon: svgIconStyles\n  },\n  componentVariables: {\n    SvgIcon: svgIconVariables\n  },\n  siteVariables\n};\n\nReactDOM.render(\n  <Provider theme={iconTheme} className=\"wrapper\">\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/staticmedia.3545b0ef.svg\";"],"sourceRoot":""}